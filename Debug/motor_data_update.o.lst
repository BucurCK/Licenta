   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "motor_data_update.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm CCU8_CC8_CR1_CR1_Value,4,4
  20              	 .global motor_spd
  21              	 .section .bss.motor_spd,"aw",%nobits
  22              	 .align 2
  25              	motor_spd:
  26 0000 00000000 	 .space 4
  27              	 .global timer_value_slow
  28              	 .section .bss.timer_value_slow,"aw",%nobits
  29              	 .align 1
  32              	timer_value_slow:
  33 0000 0000     	 .space 2
  34              	 .global timer_value_old_slow
  35              	 .section .bss.timer_value_old_slow,"aw",%nobits
  36              	 .align 1
  39              	timer_value_old_slow:
  40 0000 0000     	 .space 2
  41              	 .comm timer_diff,2,2
  42              	 .section .text.init_position,"ax",%progbits
  43              	 .align 2
  44              	 .global init_position
  45              	 .thumb
  46              	 .thumb_func
  48              	init_position:
  49              	.LFB196:
  50              	 .file 1 "../motor_data_update.c"
   1:../motor_data_update.c **** #include <stdint.h>
   2:../motor_data_update.c **** #include <stdbool.h>
   3:../motor_data_update.c **** // #include <xmc_common.h>
   4:../motor_data_update.c **** #include "driver_pwm.h"
   5:../motor_data_update.c **** #include "motor_data_update.h"
   6:../motor_data_update.c **** #include "transform.h"
   7:../motor_data_update.c **** #include "main.h"
   8:../motor_data_update.c **** #include <math.h>
   9:../motor_data_update.c **** #include "driver_pwm.h"
  10:../motor_data_update.c **** #include "timer.h"
  11:../motor_data_update.c **** #include "driver_adc.h"
  12:../motor_data_update.c **** 
  13:../motor_data_update.c **** int32_t motor_spd = 0;
  14:../motor_data_update.c **** uint16_t timer_value_slow = 0;
  15:../motor_data_update.c **** uint16_t timer_value_old_slow = 0;
  16:../motor_data_update.c **** uint16_t timer_diff;
  17:../motor_data_update.c **** 
  18:../motor_data_update.c **** /**
  19:../motor_data_update.c ****  * Initialize position for motor
  20:../motor_data_update.c ****  * Enable PWM output
  21:../motor_data_update.c ****  * B High -> wait -> A High 0 -> wait
  22:../motor_data_update.c ****  * Reset: Theta | Position | Timers_old
  23:../motor_data_update.c ****  * Disable PWM output
  24:../motor_data_update.c ****  */
  25:../motor_data_update.c **** void init_position(void) // TO DO:check if it still works
  26:../motor_data_update.c **** {
  51              	 .loc 1 26 0
  52              	 .cfi_startproc
  53              	 
  54              	 
  55 0000 80B5     	 push {r7,lr}
  56              	.LCFI0:
  57              	 .cfi_def_cfa_offset 8
  58              	 .cfi_offset 7,-8
  59              	 .cfi_offset 14,-4
  60 0002 00AF     	 add r7,sp,#0
  61              	.LCFI1:
  62              	 .cfi_def_cfa_register 7
  27:../motor_data_update.c **** 	motion_on();		   // Enable PWM pins
  63              	 .loc 1 27 0
  64 0004 FFF7FEFF 	 bl motion_on
  28:../motor_data_update.c **** 	pwm_update(0, 1000);   // Apply voltage on B Phase
  65              	 .loc 1 28 0
  66 0008 0020     	 movs r0,#0
  67 000a 4FF47A71 	 mov r1,#1000
  68 000e FFF7FEFF 	 bl pwm_update
  29:../motor_data_update.c **** 	delay_t(SECOND_1 / 2); // Wait 0.5s
  69              	 .loc 1 29 0
  70 0012 41F28830 	 movw r0,#5000
  71 0016 FFF7FEFF 	 bl delay_t
  30:../motor_data_update.c **** 
  31:../motor_data_update.c **** 	pwm_update(1000, 0);   // Apply voltage on A Phase
  72              	 .loc 1 31 0
  73 001a 4FF47A70 	 mov r0,#1000
  74 001e 0021     	 movs r1,#0
  75 0020 FFF7FEFF 	 bl pwm_update
  32:../motor_data_update.c **** 	delay_t(SECOND_1 / 2); // Wait 0.5s
  76              	 .loc 1 32 0
  77 0024 41F28830 	 movw r0,#5000
  78 0028 FFF7FEFF 	 bl delay_t
  33:../motor_data_update.c **** 
  34:../motor_data_update.c **** 	theta_fast = 0;
  79              	 .loc 1 34 0
  80 002c 084B     	 ldr r3,.L2
  81 002e 4FF00002 	 mov r2,#0
  82 0032 1A60     	 str r2,[r3]
  35:../motor_data_update.c **** 	mechanical_position_fast = 0;
  83              	 .loc 1 35 0
  84 0034 074B     	 ldr r3,.L2+4
  85 0036 0022     	 movs r2,#0
  86 0038 1A60     	 str r2,[r3]
  36:../motor_data_update.c **** 	timer_value_old_fast = CCU40_CC40->TIMER;
  87              	 .loc 1 36 0
  88 003a 074B     	 ldr r3,.L2+8
  89 003c 1B6F     	 ldr r3,[r3,#112]
  90 003e 9AB2     	 uxth r2,r3
  91 0040 064B     	 ldr r3,.L2+12
  92 0042 1A80     	 strh r2,[r3]
  37:../motor_data_update.c **** 	timer_value_old_slow = CCU40_CC40->TIMER;
  93              	 .loc 1 37 0
  94 0044 044B     	 ldr r3,.L2+8
  95 0046 1B6F     	 ldr r3,[r3,#112]
  96 0048 9AB2     	 uxth r2,r3
  97 004a 054B     	 ldr r3,.L2+16
  98 004c 1A80     	 strh r2,[r3]
  38:../motor_data_update.c **** }
  99              	 .loc 1 38 0
 100 004e 80BD     	 pop {r7,pc}
 101              	.L3:
 102              	 .align 2
 103              	.L2:
 104 0050 00000000 	 .word theta_fast
 105 0054 00000000 	 .word mechanical_position_fast
 106 0058 00C10040 	 .word 1073791232
 107 005c 00000000 	 .word timer_value_old_fast
 108 0060 00000000 	 .word timer_value_old_slow
 109              	 .cfi_endproc
 110              	.LFE196:
 112              	 .section .text.compute_speed,"ax",%progbits
 113              	 .align 2
 114              	 .global compute_speed
 115              	 .thumb
 116              	 .thumb_func
 118              	compute_speed:
 119              	.LFB197:
  39:../motor_data_update.c **** 
  40:../motor_data_update.c **** /*
  41:../motor_data_update.c ****  * Compute current speed
  42:../motor_data_update.c ****  * Slow loop
  43:../motor_data_update.c ****  */
  44:../motor_data_update.c **** void compute_speed(void)
  45:../motor_data_update.c **** {
 120              	 .loc 1 45 0
 121              	 .cfi_startproc
 122              	 
 123              	 
 124              	 
 125 0000 80B4     	 push {r7}
 126              	.LCFI2:
 127              	 .cfi_def_cfa_offset 4
 128              	 .cfi_offset 7,-4
 129 0002 00AF     	 add r7,sp,#0
 130              	.LCFI3:
 131              	 .cfi_def_cfa_register 7
  46:../motor_data_update.c **** 	timer_value_slow = CCU40_CC40->TIMER;
 132              	 .loc 1 46 0
 133 0004 264B     	 ldr r3,.L10
 134 0006 1B6F     	 ldr r3,[r3,#112]
 135 0008 9AB2     	 uxth r2,r3
 136 000a 264B     	 ldr r3,.L10+4
 137 000c 1A80     	 strh r2,[r3]
  47:../motor_data_update.c **** //	motor_spd = timer_value_old_slow - timer_value_slow;
  48:../motor_data_update.c **** 
  49:../motor_data_update.c **** 	if (timer_value_slow >= timer_value_old_slow)
 138              	 .loc 1 49 0
 139 000e 254B     	 ldr r3,.L10+4
 140 0010 1A88     	 ldrh r2,[r3]
 141 0012 254B     	 ldr r3,.L10+8
 142 0014 1B88     	 ldrh r3,[r3]
 143 0016 9A42     	 cmp r2,r3
 144 0018 1BD3     	 bcc .L5
  50:../motor_data_update.c **** 	{
  51:../motor_data_update.c **** 		timer_diff = timer_value_slow - timer_value_old_slow;
 145              	 .loc 1 51 0
 146 001a 224B     	 ldr r3,.L10+4
 147 001c 1A88     	 ldrh r2,[r3]
 148 001e 224B     	 ldr r3,.L10+8
 149 0020 1B88     	 ldrh r3,[r3]
 150 0022 D31A     	 subs r3,r2,r3
 151 0024 9AB2     	 uxth r2,r3
 152 0026 214B     	 ldr r3,.L10+12
 153 0028 1A80     	 strh r2,[r3]
  52:../motor_data_update.c **** 		if (timer_diff > (UINT16_MAX / 2))
 154              	 .loc 1 52 0
 155 002a 204B     	 ldr r3,.L10+12
 156 002c 1B88     	 ldrh r3,[r3]
 157 002e 9BB2     	 uxth r3,r3
 158 0030 1BB2     	 sxth r3,r3
 159 0032 002B     	 cmp r3,#0
 160 0034 06DA     	 bge .L6
  53:../motor_data_update.c **** 		{
  54:../motor_data_update.c **** 			motor_spd = (int16_t)(-((UINT16_MAX - timer_diff) + 1));
 161              	 .loc 1 54 0
 162 0036 1D4B     	 ldr r3,.L10+12
 163 0038 1B88     	 ldrh r3,[r3]
 164 003a 9BB2     	 uxth r3,r3
 165 003c 1BB2     	 sxth r3,r3
 166 003e 1C4A     	 ldr r2,.L10+16
 167 0040 1360     	 str r3,[r2]
 168 0042 25E0     	 b .L8
 169              	.L6:
  55:../motor_data_update.c **** 		}
  56:../motor_data_update.c **** 		else
  57:../motor_data_update.c **** 		{
  58:../motor_data_update.c **** 			motor_spd = (int16_t)timer_diff;
 170              	 .loc 1 58 0
 171 0044 194B     	 ldr r3,.L10+12
 172 0046 1B88     	 ldrh r3,[r3]
 173 0048 9BB2     	 uxth r3,r3
 174 004a 1BB2     	 sxth r3,r3
 175 004c 184A     	 ldr r2,.L10+16
 176 004e 1360     	 str r3,[r2]
 177 0050 1EE0     	 b .L8
 178              	.L5:
  59:../motor_data_update.c **** 		}
  60:../motor_data_update.c **** 	}
  61:../motor_data_update.c **** 	else
  62:../motor_data_update.c **** 	{
  63:../motor_data_update.c **** 		timer_diff = timer_value_old_slow - timer_value_slow;
 179              	 .loc 1 63 0
 180 0052 154B     	 ldr r3,.L10+8
 181 0054 1A88     	 ldrh r2,[r3]
 182 0056 134B     	 ldr r3,.L10+4
 183 0058 1B88     	 ldrh r3,[r3]
 184 005a D31A     	 subs r3,r2,r3
 185 005c 9AB2     	 uxth r2,r3
 186 005e 134B     	 ldr r3,.L10+12
 187 0060 1A80     	 strh r2,[r3]
  64:../motor_data_update.c **** 		if (timer_diff > (UINT16_MAX / 2))
 188              	 .loc 1 64 0
 189 0062 124B     	 ldr r3,.L10+12
 190 0064 1B88     	 ldrh r3,[r3]
 191 0066 9BB2     	 uxth r3,r3
 192 0068 1BB2     	 sxth r3,r3
 193 006a 002B     	 cmp r3,#0
 194 006c 08DA     	 bge .L9
  65:../motor_data_update.c **** 		{
  66:../motor_data_update.c **** 			motor_spd = (int16_t)((UINT16_MAX - timer_diff) + 1);
 195              	 .loc 1 66 0
 196 006e 0F4B     	 ldr r3,.L10+12
 197 0070 1B88     	 ldrh r3,[r3]
 198 0072 5B42     	 negs r3,r3
 199 0074 9BB2     	 uxth r3,r3
 200 0076 9BB2     	 uxth r3,r3
 201 0078 1BB2     	 sxth r3,r3
 202 007a 0D4A     	 ldr r2,.L10+16
 203 007c 1360     	 str r3,[r2]
 204 007e 07E0     	 b .L8
 205              	.L9:
  67:../motor_data_update.c **** 		}
  68:../motor_data_update.c **** 		else
  69:../motor_data_update.c **** 		{
  70:../motor_data_update.c **** 			motor_spd = (int16_t)(-timer_diff);
 206              	 .loc 1 70 0
 207 0080 0A4B     	 ldr r3,.L10+12
 208 0082 1B88     	 ldrh r3,[r3]
 209 0084 5B42     	 negs r3,r3
 210 0086 9BB2     	 uxth r3,r3
 211 0088 9BB2     	 uxth r3,r3
 212 008a 1BB2     	 sxth r3,r3
 213 008c 084A     	 ldr r2,.L10+16
 214 008e 1360     	 str r3,[r2]
 215              	.L8:
  71:../motor_data_update.c **** 		}
  72:../motor_data_update.c **** 	}
  73:../motor_data_update.c **** 
  74:../motor_data_update.c **** 	timer_value_old_slow = timer_value_slow;
 216              	 .loc 1 74 0
 217 0090 044B     	 ldr r3,.L10+4
 218 0092 1A88     	 ldrh r2,[r3]
 219 0094 044B     	 ldr r3,.L10+8
 220 0096 1A80     	 strh r2,[r3]
  75:../motor_data_update.c **** }
 221              	 .loc 1 75 0
 222 0098 BD46     	 mov sp,r7
 223              	.LCFI4:
 224              	 .cfi_def_cfa_register 13
 225              	 
 226 009a 5DF8047B 	 ldr r7,[sp],#4
 227              	.LCFI5:
 228              	 .cfi_restore 7
 229              	 .cfi_def_cfa_offset 0
 230 009e 7047     	 bx lr
 231              	.L11:
 232              	 .align 2
 233              	.L10:
 234 00a0 00C10040 	 .word 1073791232
 235 00a4 00000000 	 .word timer_value_slow
 236 00a8 00000000 	 .word timer_value_old_slow
 237 00ac 00000000 	 .word timer_diff
 238 00b0 00000000 	 .word motor_spd
 239              	 .cfi_endproc
 240              	.LFE197:
 242              	 .text
 243              	.Letext0:
 244              	 .file 2 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 245              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 246              	 .file 4 "C:/GitHub/Stepper_drive/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 247              	 .file 5 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\math.h"
 248              	 .file 6 "C:/GitHub/Stepper_drive/Libraries/CMSIS/Include/core_cm4.h"
 249              	 .file 7 "../main.h"
 250              	 .file 8 "../transform.h"
DEFINED SYMBOLS
                            *ABS*:00000000 motor_data_update.c
                            *COM*:00000004 CCU8_CC8_CR1_CR1_Value
    {standard input}:25     .bss.motor_spd:00000000 motor_spd
    {standard input}:22     .bss.motor_spd:00000000 $d
    {standard input}:32     .bss.timer_value_slow:00000000 timer_value_slow
    {standard input}:29     .bss.timer_value_slow:00000000 $d
    {standard input}:39     .bss.timer_value_old_slow:00000000 timer_value_old_slow
    {standard input}:36     .bss.timer_value_old_slow:00000000 $d
                            *COM*:00000002 timer_diff
    {standard input}:43     .text.init_position:00000000 $t
    {standard input}:48     .text.init_position:00000000 init_position
    {standard input}:104    .text.init_position:00000050 $d
    {standard input}:113    .text.compute_speed:00000000 $t
    {standard input}:118    .text.compute_speed:00000000 compute_speed
    {standard input}:234    .text.compute_speed:000000a0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
motion_on
pwm_update
delay_t
theta_fast
mechanical_position_fast
timer_value_old_fast
