   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "motor_data_update.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm CCU8_CC8_CR1_CR1_Value,4,4
  20              	 .comm theta_fast,4,4
  21              	 .global motor_spd
  22              	 .section .bss.motor_spd,"aw",%nobits
  23              	 .align 2
  26              	motor_spd:
  27 0000 00000000 	 .space 4
  28              	 .global mechanical_position_old
  29              	 .section .bss.mechanical_position_old,"aw",%nobits
  30              	 .align 2
  33              	mechanical_position_old:
  34 0000 00000000 	 .space 4
  35              	 .section .text.init_position,"ax",%progbits
  36              	 .align 2
  37              	 .global init_position
  38              	 .thumb
  39              	 .thumb_func
  41              	init_position:
  42              	.LFB196:
  43              	 .file 1 "../motor_data_update.c"
   1:../motor_data_update.c **** #include <stdint.h>
   2:../motor_data_update.c **** #include <stdbool.h>
   3:../motor_data_update.c **** //#include <xmc_common.h>
   4:../motor_data_update.c **** #include "driver_pwm.h"
   5:../motor_data_update.c **** #include "motor_data_update.h"
   6:../motor_data_update.c **** #include "transform.h"
   7:../motor_data_update.c **** #include "main.h"
   8:../motor_data_update.c **** #include <math.h>
   9:../motor_data_update.c **** #include "driver_pwm.h"
  10:../motor_data_update.c **** #include "timer.h"
  11:../motor_data_update.c **** #include "driver_adc.h"
  12:../motor_data_update.c **** 
  13:../motor_data_update.c **** int32_t	motor_spd = 0;
  14:../motor_data_update.c **** int32_t	mechanical_position_old = 0;
  15:../motor_data_update.c **** 
  16:../motor_data_update.c **** /**
  17:../motor_data_update.c ****  * Initialize position for motor
  18:../motor_data_update.c ****  * 
  19:../motor_data_update.c ****  */
  20:../motor_data_update.c **** void init_position (void)
  21:../motor_data_update.c **** {
  44              	 .loc 1 21 0
  45              	 .cfi_startproc
  46              	 
  47              	 
  48 0000 80B5     	 push {r7,lr}
  49              	.LCFI0:
  50              	 .cfi_def_cfa_offset 8
  51              	 .cfi_offset 7,-8
  52              	 .cfi_offset 14,-4
  53 0002 00AF     	 add r7,sp,#0
  54              	.LCFI1:
  55              	 .cfi_def_cfa_register 7
  22:../motor_data_update.c **** 	motion_on();				//Enable PWM pins
  56              	 .loc 1 22 0
  57 0004 FFF7FEFF 	 bl motion_on
  23:../motor_data_update.c **** 	pwm_update(0, 4000, 0);		//Apply voltage on the B Phase
  58              	 .loc 1 23 0
  59 0008 0020     	 movs r0,#0
  60 000a 4FF47A61 	 mov r1,#4000
  61 000e 0022     	 movs r2,#0
  62 0010 FFF7FEFF 	 bl pwm_update
  24:../motor_data_update.c **** 	delay_t(SECOND_1/2);		//Wait 0.5s
  63              	 .loc 1 24 0
  64 0014 41F28830 	 movw r0,#5000
  65 0018 FFF7FEFF 	 bl delay_t
  25:../motor_data_update.c **** 
  26:../motor_data_update.c **** 	pwm_update(4000, 0, 0);		//Apply voltage on the A Phase
  66              	 .loc 1 26 0
  67 001c 4FF47A60 	 mov r0,#4000
  68 0020 0021     	 movs r1,#0
  69 0022 0022     	 movs r2,#0
  70 0024 FFF7FEFF 	 bl pwm_update
  27:../motor_data_update.c **** 	delay_t(SECOND_1/2);		//Wait 0.5s
  71              	 .loc 1 27 0
  72 0028 41F28830 	 movw r0,#5000
  73 002c FFF7FEFF 	 bl delay_t
  28:../motor_data_update.c **** 	motion_off();				//Disable PWM pin
  74              	 .loc 1 28 0
  75 0030 FFF7FEFF 	 bl motion_off
  29:../motor_data_update.c **** 
  30:../motor_data_update.c **** 	theta_fast = 0;
  76              	 .loc 1 30 0
  77 0034 064B     	 ldr r3,.L2
  78 0036 4FF00002 	 mov r2,#0
  79 003a 1A60     	 str r2,[r3]
  31:../motor_data_update.c **** 	mechanical_position_fast = 0;
  80              	 .loc 1 31 0
  81 003c 054B     	 ldr r3,.L2+4
  82 003e 0022     	 movs r2,#0
  83 0040 1A60     	 str r2,[r3]
  32:../motor_data_update.c **** 	motor_spd = 0;
  84              	 .loc 1 32 0
  85 0042 054B     	 ldr r3,.L2+8
  86 0044 0022     	 movs r2,#0
  87 0046 1A60     	 str r2,[r3]
  33:../motor_data_update.c **** 	mechanical_position_old = 0;
  88              	 .loc 1 33 0
  89 0048 044B     	 ldr r3,.L2+12
  90 004a 0022     	 movs r2,#0
  91 004c 1A60     	 str r2,[r3]
  34:../motor_data_update.c **** }
  92              	 .loc 1 34 0
  93 004e 80BD     	 pop {r7,pc}
  94              	.L3:
  95              	 .align 2
  96              	.L2:
  97 0050 00000000 	 .word theta_fast
  98 0054 00000000 	 .word mechanical_position_fast
  99 0058 00000000 	 .word motor_spd
 100 005c 00000000 	 .word mechanical_position_old
 101              	 .cfi_endproc
 102              	.LFE196:
 104              	 .section .text.compute_speed,"ax",%progbits
 105              	 .align 2
 106              	 .global compute_speed
 107              	 .thumb
 108              	 .thumb_func
 110              	compute_speed:
 111              	.LFB197:
  35:../motor_data_update.c **** 
  36:../motor_data_update.c **** /**
  37:../motor_data_update.c ****  * Compute current speed of motor
  38:../motor_data_update.c ****  * 
  39:../motor_data_update.c ****  */
  40:../motor_data_update.c **** void compute_speed (void)
  41:../motor_data_update.c **** {
 112              	 .loc 1 41 0
 113              	 .cfi_startproc
 114              	 
 115              	 
 116              	 
 117 0000 80B4     	 push {r7}
 118              	.LCFI2:
 119              	 .cfi_def_cfa_offset 4
 120              	 .cfi_offset 7,-4
 121 0002 00AF     	 add r7,sp,#0
 122              	.LCFI3:
 123              	 .cfi_def_cfa_register 7
  42:../motor_data_update.c **** 	motor_spd = mechanical_position_fast - mechanical_position_old;
 124              	 .loc 1 42 0
 125 0004 074B     	 ldr r3,.L5
 126 0006 1A68     	 ldr r2,[r3]
 127 0008 074B     	 ldr r3,.L5+4
 128 000a 1B68     	 ldr r3,[r3]
 129 000c D31A     	 subs r3,r2,r3
 130 000e 074A     	 ldr r2,.L5+8
 131 0010 1360     	 str r3,[r2]
  43:../motor_data_update.c **** 	mechanical_position_old = mechanical_position_fast;
 132              	 .loc 1 43 0
 133 0012 044B     	 ldr r3,.L5
 134 0014 1B68     	 ldr r3,[r3]
 135 0016 044A     	 ldr r2,.L5+4
 136 0018 1360     	 str r3,[r2]
  44:../motor_data_update.c **** }
 137              	 .loc 1 44 0
 138 001a BD46     	 mov sp,r7
 139              	.LCFI4:
 140              	 .cfi_def_cfa_register 13
 141              	 
 142 001c 5DF8047B 	 ldr r7,[sp],#4
 143              	.LCFI5:
 144              	 .cfi_restore 7
 145              	 .cfi_def_cfa_offset 0
 146 0020 7047     	 bx lr
 147              	.L6:
 148 0022 00BF     	 .align 2
 149              	.L5:
 150 0024 00000000 	 .word mechanical_position_fast
 151 0028 00000000 	 .word mechanical_position_old
 152 002c 00000000 	 .word motor_spd
 153              	 .cfi_endproc
 154              	.LFE197:
 156              	 .text
 157              	.Letext0:
 158              	 .file 2 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 159              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 160              	 .file 4 "C:/CODE/Licenta/Libraries/CMSIS/Include/core_cm4.h"
 161              	 .file 5 "../main.h"
 162              	 .file 6 "../transform.h"
DEFINED SYMBOLS
                            *ABS*:00000000 motor_data_update.c
                            *COM*:00000004 CCU8_CC8_CR1_CR1_Value
                            *COM*:00000004 theta_fast
    {standard input}:26     .bss.motor_spd:00000000 motor_spd
    {standard input}:23     .bss.motor_spd:00000000 $d
    {standard input}:33     .bss.mechanical_position_old:00000000 mechanical_position_old
    {standard input}:30     .bss.mechanical_position_old:00000000 $d
    {standard input}:36     .text.init_position:00000000 $t
    {standard input}:41     .text.init_position:00000000 init_position
    {standard input}:97     .text.init_position:00000050 $d
    {standard input}:105    .text.compute_speed:00000000 $t
    {standard input}:110    .text.compute_speed:00000000 compute_speed
    {standard input}:150    .text.compute_speed:00000024 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
motion_on
pwm_update
delay_t
motion_off
mechanical_position_fast
