   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "motor_data_update.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm CCU8_CC8_CR1_CR1_Value,4,4
  20              	 .global motor_spd
  21              	 .section .bss.motor_spd,"aw",%nobits
  22              	 .align 2
  25              	motor_spd:
  26 0000 00000000 	 .space 4
  27              	 .global timer_value_slow
  28              	 .section .bss.timer_value_slow,"aw",%nobits
  29              	 .align 1
  32              	timer_value_slow:
  33 0000 0000     	 .space 2
  34              	 .global timer_value_old_slow
  35              	 .section .bss.timer_value_old_slow,"aw",%nobits
  36              	 .align 1
  39              	timer_value_old_slow:
  40 0000 0000     	 .space 2
  41              	 .section .text.init_position,"ax",%progbits
  42              	 .align 2
  43              	 .global init_position
  44              	 .thumb
  45              	 .thumb_func
  47              	init_position:
  48              	.LFB196:
  49              	 .file 1 "../motor_data_update.c"
   1:../motor_data_update.c **** #include <stdint.h>
   2:../motor_data_update.c **** #include <stdbool.h>
   3:../motor_data_update.c **** // #include <xmc_common.h>
   4:../motor_data_update.c **** #include "driver_pwm.h"
   5:../motor_data_update.c **** #include "motor_data_update.h"
   6:../motor_data_update.c **** #include "transform.h"
   7:../motor_data_update.c **** #include "main.h"
   8:../motor_data_update.c **** #include <math.h>
   9:../motor_data_update.c **** #include "driver_pwm.h"
  10:../motor_data_update.c **** #include "timer.h"
  11:../motor_data_update.c **** #include "driver_adc.h"
  12:../motor_data_update.c **** 
  13:../motor_data_update.c **** int32_t motor_spd = 0;
  14:../motor_data_update.c **** uint16_t timer_value_slow = 0;
  15:../motor_data_update.c **** uint16_t timer_value_old_slow = 0;
  16:../motor_data_update.c **** 
  17:../motor_data_update.c **** /**
  18:../motor_data_update.c ****  * Initialize position for motor
  19:../motor_data_update.c ****  * Enable PWM output
  20:../motor_data_update.c ****  * B High -> wait -> A High 0 -> wait
  21:../motor_data_update.c ****  * Reset: Theta | Position | Timers_old
  22:../motor_data_update.c ****  * Disable PWM output
  23:../motor_data_update.c ****  */
  24:../motor_data_update.c **** void init_position(void)
  25:../motor_data_update.c **** {
  50              	 .loc 1 25 0
  51              	 .cfi_startproc
  52              	 
  53              	 
  54 0000 80B5     	 push {r7,lr}
  55              	.LCFI0:
  56              	 .cfi_def_cfa_offset 8
  57              	 .cfi_offset 7,-8
  58              	 .cfi_offset 14,-4
  59 0002 00AF     	 add r7,sp,#0
  60              	.LCFI1:
  61              	 .cfi_def_cfa_register 7
  26:../motor_data_update.c **** 	motion_on();			// Enable PWM pins
  62              	 .loc 1 26 0
  63 0004 FFF7FEFF 	 bl motion_on
  27:../motor_data_update.c **** 	pwm_update(0, 4000, 0); // Apply voltage on B Phase
  64              	 .loc 1 27 0
  65 0008 0020     	 movs r0,#0
  66 000a 4FF47A61 	 mov r1,#4000
  67 000e 0022     	 movs r2,#0
  68 0010 FFF7FEFF 	 bl pwm_update
  28:../motor_data_update.c **** 	delay_t(SECOND_1 / 2);	// Wait 0.5s
  69              	 .loc 1 28 0
  70 0014 41F28830 	 movw r0,#5000
  71 0018 FFF7FEFF 	 bl delay_t
  29:../motor_data_update.c **** 
  30:../motor_data_update.c **** 	pwm_update(4000, 0, 0); // Apply voltage on A Phase
  72              	 .loc 1 30 0
  73 001c 4FF47A60 	 mov r0,#4000
  74 0020 0021     	 movs r1,#0
  75 0022 0022     	 movs r2,#0
  76 0024 FFF7FEFF 	 bl pwm_update
  31:../motor_data_update.c **** 	delay_t(SECOND_1 / 2);	// Wait 0.5s
  77              	 .loc 1 31 0
  78 0028 41F28830 	 movw r0,#5000
  79 002c FFF7FEFF 	 bl delay_t
  32:../motor_data_update.c **** 	motion_off();			// Disable PWM pin
  80              	 .loc 1 32 0
  81 0030 FFF7FEFF 	 bl motion_off
  33:../motor_data_update.c **** 
  34:../motor_data_update.c **** 	theta_fast = 0;
  82              	 .loc 1 34 0
  83 0034 084B     	 ldr r3,.L2
  84 0036 4FF00002 	 mov r2,#0
  85 003a 1A60     	 str r2,[r3]
  35:../motor_data_update.c **** 	mechanical_position_fast = 0;
  86              	 .loc 1 35 0
  87 003c 074B     	 ldr r3,.L2+4
  88 003e 0022     	 movs r2,#0
  89 0040 1A60     	 str r2,[r3]
  36:../motor_data_update.c **** 	timer_value_old_fast = CCU40_CC40->TIMER;
  90              	 .loc 1 36 0
  91 0042 074B     	 ldr r3,.L2+8
  92 0044 1B6F     	 ldr r3,[r3,#112]
  93 0046 9AB2     	 uxth r2,r3
  94 0048 064B     	 ldr r3,.L2+12
  95 004a 1A80     	 strh r2,[r3]
  37:../motor_data_update.c **** 	timer_value_old_slow = CCU40_CC40->TIMER;
  96              	 .loc 1 37 0
  97 004c 044B     	 ldr r3,.L2+8
  98 004e 1B6F     	 ldr r3,[r3,#112]
  99 0050 9AB2     	 uxth r2,r3
 100 0052 054B     	 ldr r3,.L2+16
 101 0054 1A80     	 strh r2,[r3]
  38:../motor_data_update.c **** //	motor_spd = 0;
  39:../motor_data_update.c **** }
 102              	 .loc 1 39 0
 103 0056 80BD     	 pop {r7,pc}
 104              	.L3:
 105              	 .align 2
 106              	.L2:
 107 0058 00000000 	 .word theta_fast
 108 005c 00000000 	 .word mechanical_position_fast
 109 0060 00C10040 	 .word 1073791232
 110 0064 00000000 	 .word timer_value_old_fast
 111 0068 00000000 	 .word timer_value_old_slow
 112              	 .cfi_endproc
 113              	.LFE196:
 115              	 .section .text.compute_speed,"ax",%progbits
 116              	 .align 2
 117              	 .global compute_speed
 118              	 .thumb
 119              	 .thumb_func
 121              	compute_speed:
 122              	.LFB197:
  40:../motor_data_update.c **** 
  41:../motor_data_update.c **** /**
  42:../motor_data_update.c ****  * Compute current speed
  43:../motor_data_update.c ****  * Slow loop
  44:../motor_data_update.c ****  */
  45:../motor_data_update.c **** void compute_speed(void)
  46:../motor_data_update.c **** {
 123              	 .loc 1 46 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	.LCFI2:
 130              	 .cfi_def_cfa_offset 4
 131              	 .cfi_offset 7,-4
 132 0002 00AF     	 add r7,sp,#0
 133              	.LCFI3:
 134              	 .cfi_def_cfa_register 7
  47:../motor_data_update.c **** 	timer_value_slow = CCU40_CC40->TIMER;
 135              	 .loc 1 47 0
 136 0004 0A4B     	 ldr r3,.L5
 137 0006 1B6F     	 ldr r3,[r3,#112]
 138 0008 9AB2     	 uxth r2,r3
 139 000a 0A4B     	 ldr r3,.L5+4
 140 000c 1A80     	 strh r2,[r3]
  48:../motor_data_update.c **** 	motor_spd = timer_value_slow - timer_value_old_slow;
 141              	 .loc 1 48 0
 142 000e 094B     	 ldr r3,.L5+4
 143 0010 1B88     	 ldrh r3,[r3]
 144 0012 1A46     	 mov r2,r3
 145 0014 084B     	 ldr r3,.L5+8
 146 0016 1B88     	 ldrh r3,[r3]
 147 0018 D31A     	 subs r3,r2,r3
 148 001a 084A     	 ldr r2,.L5+12
 149 001c 1360     	 str r3,[r2]
  49:../motor_data_update.c **** 	timer_value_old_slow = timer_value_slow;
 150              	 .loc 1 49 0
 151 001e 054B     	 ldr r3,.L5+4
 152 0020 1A88     	 ldrh r2,[r3]
 153 0022 054B     	 ldr r3,.L5+8
 154 0024 1A80     	 strh r2,[r3]
  50:../motor_data_update.c **** }
 155              	 .loc 1 50 0
 156 0026 BD46     	 mov sp,r7
 157              	.LCFI4:
 158              	 .cfi_def_cfa_register 13
 159              	 
 160 0028 5DF8047B 	 ldr r7,[sp],#4
 161              	.LCFI5:
 162              	 .cfi_restore 7
 163              	 .cfi_def_cfa_offset 0
 164 002c 7047     	 bx lr
 165              	.L6:
 166 002e 00BF     	 .align 2
 167              	.L5:
 168 0030 00C10040 	 .word 1073791232
 169 0034 00000000 	 .word timer_value_slow
 170 0038 00000000 	 .word timer_value_old_slow
 171 003c 00000000 	 .word motor_spd
 172              	 .cfi_endproc
 173              	.LFE197:
 175              	 .text
 176              	.Letext0:
 177              	 .file 2 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 178              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 179              	 .file 4 "C:/CODE/Licenta/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 180              	 .file 5 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\math.h"
 181              	 .file 6 "C:/CODE/Licenta/Libraries/CMSIS/Include/core_cm4.h"
 182              	 .file 7 "../main.h"
 183              	 .file 8 "../transform.h"
DEFINED SYMBOLS
                            *ABS*:00000000 motor_data_update.c
                            *COM*:00000004 CCU8_CC8_CR1_CR1_Value
    {standard input}:25     .bss.motor_spd:00000000 motor_spd
    {standard input}:22     .bss.motor_spd:00000000 $d
    {standard input}:32     .bss.timer_value_slow:00000000 timer_value_slow
    {standard input}:29     .bss.timer_value_slow:00000000 $d
    {standard input}:39     .bss.timer_value_old_slow:00000000 timer_value_old_slow
    {standard input}:36     .bss.timer_value_old_slow:00000000 $d
    {standard input}:42     .text.init_position:00000000 $t
    {standard input}:47     .text.init_position:00000000 init_position
    {standard input}:107    .text.init_position:00000058 $d
    {standard input}:116    .text.compute_speed:00000000 $t
    {standard input}:121    .text.compute_speed:00000000 compute_speed
    {standard input}:168    .text.compute_speed:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
motion_on
pwm_update
delay_t
motion_off
theta_fast
mechanical_position_fast
timer_value_old_fast
