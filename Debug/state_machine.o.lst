   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "state_machine.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm CCU8_CC8_CR1_CR1_Value,4,4
  20              	 .comm theta_fast,4,4
  21              	 .global drive_status
  22              	 .section .bss.drive_status,"aw",%nobits
  23              	 .align 1
  26              	drive_status:
  27 0000 0000     	 .space 2
  28              	 .global drive_command
  29              	 .section .bss.drive_command,"aw",%nobits
  30              	 .align 1
  33              	drive_command:
  34 0000 0000     	 .space 2
  35              	 .global drive_command_old
  36              	 .section .bss.drive_command_old,"aw",%nobits
  37              	 .align 1
  40              	drive_command_old:
  41 0000 0000     	 .space 2
  42              	 .global loop_control
  43              	 .section .bss.loop_control,"aw",%nobits
  46              	loop_control:
  47 0000 00       	 .space 1
  48              	 .global tune_test_control
  49              	 .section .bss.tune_test_control,"aw",%nobits
  52              	tune_test_control:
  53 0000 00       	 .space 1
  54              	 .global motion_config
  55              	 .section .bss.motion_config,"aw",%nobits
  58              	motion_config:
  59 0000 00       	 .space 1
  60              	 .section .text.state_machine,"ax",%progbits
  61              	 .align 2
  62              	 .global state_machine
  63              	 .thumb
  64              	 .thumb_func
  66              	state_machine:
  67              	.LFB196:
  68              	 .file 1 "../state_machine.c"
   1:../state_machine.c **** /*
   2:../state_machine.c ****  * state_machine.c
   3:../state_machine.c ****  *
   4:../state_machine.c ****  *  Created on: 24 Mar 2023
   5:../state_machine.c ****  *      Author: xraid
   6:../state_machine.c ****  */
   7:../state_machine.c **** #include "main.h"
   8:../state_machine.c **** #include "state_machine.h"
   9:../state_machine.c **** #include "driver_adc.h"
  10:../state_machine.c **** #include "driver_pwm.h"
  11:../state_machine.c **** #include "motor_data_update.h"
  12:../state_machine.c **** #include "reference_generator.h"
  13:../state_machine.c **** #include "transform.h"
  14:../state_machine.c **** 
  15:../state_machine.c **** uint16_t drive_status = STATE_0_DRIVE_DISABLED;
  16:../state_machine.c **** uint16_t drive_command = STATE_0_DRIVE_DISABLED;
  17:../state_machine.c **** uint16_t drive_command_old = STATE_0_DRIVE_DISABLED;
  18:../state_machine.c **** uint8_t loop_control = LOOP_CONTROL_OFF;
  19:../state_machine.c **** uint8_t tune_test_control = OFF;
  20:../state_machine.c **** uint8_t motion_config = OFF;
  21:../state_machine.c **** 
  22:../state_machine.c **** void state_machine (void)
  23:../state_machine.c **** {
  69              	 .loc 1 23 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73 0000 80B5     	 push {r7,lr}
  74              	.LCFI0:
  75              	 .cfi_def_cfa_offset 8
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 00AF     	 add r7,sp,#0
  79              	.LCFI1:
  80              	 .cfi_def_cfa_register 7
  24:../state_machine.c **** 	switch(DRIVE_STATUS_MSK)
  81              	 .loc 1 24 0
  82 0004 7E4B     	 ldr r3,.L20
  83 0006 1B88     	 ldrh r3,[r3]
  84 0008 03F00F03 	 and r3,r3,#15
  85 000c 012B     	 cmp r3,#1
  86 000e 26D0     	 beq .L3
  87 0010 012B     	 cmp r3,#1
  88 0012 02D3     	 bcc .L4
  89 0014 022B     	 cmp r3,#2
  90 0016 61D0     	 beq .L5
  25:../state_machine.c **** 	{
  26:../state_machine.c **** 	case (STATE_0_DRIVE_DISABLED):
  27:../state_machine.c **** 		//Transition 0->1
  28:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_0_DRIVE_DISABLED) && (DRIVE_COMMAND_STATE_MSK == STATE_
  29:../state_machine.c **** 			{
  30:../state_machine.c **** 				drive_on();
  31:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
  32:../state_machine.c **** 				drive_status |= STATE_1_DRIVE_ON;
  33:../state_machine.c **** 				drive_command_old = drive_command;
  34:../state_machine.c **** 			}
  35:../state_machine.c **** 			break;
  36:../state_machine.c **** 
  37:../state_machine.c **** 	case (STATE_1_DRIVE_ON):
  38:../state_machine.c **** 		//Transition 1->2
  39:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_1_DRIVE_ON) && (DRIVE_COMMAND_STATE_MSK == STATE_2_OPER
  40:../state_machine.c **** 			{
  41:../state_machine.c **** 				operation_enabled();
  42:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
  43:../state_machine.c **** 				drive_status |= STATE_2_OPERATION_ENABLED;
  44:../state_machine.c **** 				drive_command_old = drive_command;
  45:../state_machine.c **** 			}
  46:../state_machine.c **** 		//Transition 1->0
  47:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_1_DRIVE_ON) && (DRIVE_COMMAND_STATE_MSK == STATE_0_DRIV
  48:../state_machine.c **** 			{
  49:../state_machine.c **** 			drive_disabled();
  50:../state_machine.c **** 			drive_status &= DRIVE_STATUS_CLEAR;
  51:../state_machine.c **** 			drive_status |= STATE_0_DRIVE_DISABLED;
  52:../state_machine.c **** 			drive_command_old = drive_command;
  53:../state_machine.c **** 			}
  54:../state_machine.c **** 			break;
  55:../state_machine.c **** 
  56:../state_machine.c **** 	case (STATE_2_OPERATION_ENABLED):
  57:../state_machine.c **** 	{
  58:../state_machine.c **** 		//Transition 2->1
  59:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_2_OPERATION_ENABLED) && (DRIVE_COMMAND_STATE_MSK == STA
  60:../state_machine.c **** 			{
  61:../state_machine.c **** 				drive_on();
  62:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
  63:../state_machine.c **** 				drive_status |= STATE_1_DRIVE_ON;
  64:../state_machine.c **** 				drive_command_old = drive_command;
  65:../state_machine.c **** 			}
  66:../state_machine.c **** 		//Transition 2->0
  67:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_2_OPERATION_ENABLED) && (DRIVE_COMMAND_STATE_MSK == STA
  68:../state_machine.c **** 			{
  69:../state_machine.c **** 				drive_disabled();
  70:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
  71:../state_machine.c **** 				drive_status |= STATE_0_DRIVE_DISABLED;
  72:../state_machine.c **** 				drive_command_old = drive_command;
  73:../state_machine.c **** 			}
  74:../state_machine.c **** 		//Check for update
  75:../state_machine.c **** 		if((!(DRIVE_COMMAND_UPDATE_OLD_MSK & UPDATE_MSK) && (DRIVE_COMMAND_UPDATE_MSK & UPDATE_MSK)) && (
  76:../state_machine.c **** 		{
  77:../state_machine.c **** 			//Check for reference generator output (Priority list: POS > SPD > I > U)
  78:../state_machine.c **** 			if(DRIVE_COMMAND_REF_MSK & REF_POS_MSK)
  79:../state_machine.c **** 			{
  80:../state_machine.c **** 				//POS REF
  81:../state_machine.c **** 				ref_type_select = REF_POS;
  82:../state_machine.c **** 				//Check to see if SPD loop is OFF and I loop is ON to activate PID regulator
  83:../state_machine.c **** 				if (!(DRIVE_COMMAND_REF_MSK & REF_SPD_MSK) && (DRIVE_COMMAND_REF_MSK & REF_I_MSK))
  84:../state_machine.c **** 				{
  85:../state_machine.c **** 					pid_status = ON;
  86:../state_machine.c **** 				}
  87:../state_machine.c **** 			}
  88:../state_machine.c **** 			else if(DRIVE_COMMAND_REF_MSK & REF_SPD_MSK)
  89:../state_machine.c **** 			{
  90:../state_machine.c **** 				//SPD REF
  91:../state_machine.c **** 				ref_type_select = REF_SPD;
  92:../state_machine.c **** 			}
  93:../state_machine.c **** 			else if(DRIVE_COMMAND_REF_MSK & REF_I_MSK)
  94:../state_machine.c **** 			{
  95:../state_machine.c **** 				//I REFF
  96:../state_machine.c **** 				ref_type_select = REF_I;
  97:../state_machine.c **** 				if(DRIVE_COMMAND_TEST_MSK & TUNE_TEST)
  98:../state_machine.c **** 				{
  99:../state_machine.c **** 					tune_test_control = ON;
 100:../state_machine.c **** 				}
 101:../state_machine.c **** 			}
 102:../state_machine.c **** 			else
 103:../state_machine.c **** 			{
 104:../state_machine.c **** 				//U REF
 105:../state_machine.c **** 				ref_type_select = REF_U;
 106:../state_machine.c **** 			}
 107:../state_machine.c **** 			compute_motion();
 108:../state_machine.c **** 			drive_command_old = drive_command;
 109:../state_machine.c **** 		}
 110:../state_machine.c **** 	}
 111:../state_machine.c **** 			break;
 112:../state_machine.c **** 	default:
 113:../state_machine.c **** 		break;
  91              	 .loc 1 113 0
  92 0018 F0E0     	 b .L1
  93              	.L4:
  28:../state_machine.c **** 			{
  94              	 .loc 1 28 0
  95 001a 7A4B     	 ldr r3,.L20+4
  96 001c 1B88     	 ldrh r3,[r3]
  97 001e 03F00F03 	 and r3,r3,#15
  98 0022 002B     	 cmp r3,#0
  99 0024 1AD1     	 bne .L6
  28:../state_machine.c **** 			{
 100              	 .loc 1 28 0 is_stmt 0 discriminator 1
 101 0026 784B     	 ldr r3,.L20+8
 102 0028 1B88     	 ldrh r3,[r3]
 103 002a 03F00F03 	 and r3,r3,#15
 104 002e 012B     	 cmp r3,#1
 105 0030 14D1     	 bne .L6
  30:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
 106              	 .loc 1 30 0 is_stmt 1
 107 0032 FFF7FEFF 	 bl drive_on
  31:../state_machine.c **** 				drive_status |= STATE_1_DRIVE_ON;
 108              	 .loc 1 31 0
 109 0036 724B     	 ldr r3,.L20
 110 0038 1B88     	 ldrh r3,[r3]
 111 003a 23F00F03 	 bic r3,r3,#15
 112 003e 9AB2     	 uxth r2,r3
 113 0040 6F4B     	 ldr r3,.L20
 114 0042 1A80     	 strh r2,[r3]
  32:../state_machine.c **** 				drive_command_old = drive_command;
 115              	 .loc 1 32 0
 116 0044 6E4B     	 ldr r3,.L20
 117 0046 1B88     	 ldrh r3,[r3]
 118 0048 43F00103 	 orr r3,r3,#1
 119 004c 9AB2     	 uxth r2,r3
 120 004e 6C4B     	 ldr r3,.L20
 121 0050 1A80     	 strh r2,[r3]
  33:../state_machine.c **** 			}
 122              	 .loc 1 33 0
 123 0052 6D4B     	 ldr r3,.L20+8
 124 0054 1A88     	 ldrh r2,[r3]
 125 0056 6B4B     	 ldr r3,.L20+4
 126 0058 1A80     	 strh r2,[r3]
  35:../state_machine.c **** 
 127              	 .loc 1 35 0
 128 005a CFE0     	 b .L1
 129              	.L6:
 130 005c CEE0     	 b .L1
 131              	.L3:
  39:../state_machine.c **** 			{
 132              	 .loc 1 39 0
 133 005e 694B     	 ldr r3,.L20+4
 134 0060 1B88     	 ldrh r3,[r3]
 135 0062 03F00F03 	 and r3,r3,#15
 136 0066 012B     	 cmp r3,#1
 137 0068 19D1     	 bne .L8
  39:../state_machine.c **** 			{
 138              	 .loc 1 39 0 is_stmt 0 discriminator 1
 139 006a 674B     	 ldr r3,.L20+8
 140 006c 1B88     	 ldrh r3,[r3]
 141 006e 03F00F03 	 and r3,r3,#15
 142 0072 022B     	 cmp r3,#2
 143 0074 13D1     	 bne .L8
  41:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
 144              	 .loc 1 41 0 is_stmt 1
 145 0076 FFF7FEFF 	 bl operation_enabled
  42:../state_machine.c **** 				drive_status |= STATE_2_OPERATION_ENABLED;
 146              	 .loc 1 42 0
 147 007a 614B     	 ldr r3,.L20
 148 007c 1B88     	 ldrh r3,[r3]
 149 007e 23F00F03 	 bic r3,r3,#15
 150 0082 9AB2     	 uxth r2,r3
 151 0084 5E4B     	 ldr r3,.L20
 152 0086 1A80     	 strh r2,[r3]
  43:../state_machine.c **** 				drive_command_old = drive_command;
 153              	 .loc 1 43 0
 154 0088 5D4B     	 ldr r3,.L20
 155 008a 1B88     	 ldrh r3,[r3]
 156 008c 43F00203 	 orr r3,r3,#2
 157 0090 9AB2     	 uxth r2,r3
 158 0092 5B4B     	 ldr r3,.L20
 159 0094 1A80     	 strh r2,[r3]
  44:../state_machine.c **** 			}
 160              	 .loc 1 44 0
 161 0096 5C4B     	 ldr r3,.L20+8
 162 0098 1A88     	 ldrh r2,[r3]
 163 009a 5A4B     	 ldr r3,.L20+4
 164 009c 1A80     	 strh r2,[r3]
 165              	.L8:
  47:../state_machine.c **** 			{
 166              	 .loc 1 47 0
 167 009e 594B     	 ldr r3,.L20+4
 168 00a0 1B88     	 ldrh r3,[r3]
 169 00a2 03F00F03 	 and r3,r3,#15
 170 00a6 012B     	 cmp r3,#1
 171 00a8 17D1     	 bne .L9
  47:../state_machine.c **** 			{
 172              	 .loc 1 47 0 is_stmt 0 discriminator 1
 173 00aa 574B     	 ldr r3,.L20+8
 174 00ac 1B88     	 ldrh r3,[r3]
 175 00ae 03F00F03 	 and r3,r3,#15
 176 00b2 002B     	 cmp r3,#0
 177 00b4 11D1     	 bne .L9
  49:../state_machine.c **** 			drive_status &= DRIVE_STATUS_CLEAR;
 178              	 .loc 1 49 0 is_stmt 1
 179 00b6 FFF7FEFF 	 bl drive_disabled
  50:../state_machine.c **** 			drive_status |= STATE_0_DRIVE_DISABLED;
 180              	 .loc 1 50 0
 181 00ba 514B     	 ldr r3,.L20
 182 00bc 1B88     	 ldrh r3,[r3]
 183 00be 23F00F03 	 bic r3,r3,#15
 184 00c2 9AB2     	 uxth r2,r3
 185 00c4 4E4B     	 ldr r3,.L20
 186 00c6 1A80     	 strh r2,[r3]
  51:../state_machine.c **** 			drive_command_old = drive_command;
 187              	 .loc 1 51 0
 188 00c8 4D4B     	 ldr r3,.L20
 189 00ca 1A88     	 ldrh r2,[r3]
 190 00cc 4C4B     	 ldr r3,.L20
 191 00ce 1A80     	 strh r2,[r3]
  52:../state_machine.c **** 			}
 192              	 .loc 1 52 0
 193 00d0 4D4B     	 ldr r3,.L20+8
 194 00d2 1A88     	 ldrh r2,[r3]
 195 00d4 4B4B     	 ldr r3,.L20+4
 196 00d6 1A80     	 strh r2,[r3]
  54:../state_machine.c **** 
 197              	 .loc 1 54 0
 198 00d8 90E0     	 b .L1
 199              	.L9:
 200 00da 8FE0     	 b .L1
 201              	.L5:
  59:../state_machine.c **** 			{
 202              	 .loc 1 59 0
 203 00dc 494B     	 ldr r3,.L20+4
 204 00de 1B88     	 ldrh r3,[r3]
 205 00e0 03F00F03 	 and r3,r3,#15
 206 00e4 022B     	 cmp r3,#2
 207 00e6 19D1     	 bne .L10
  59:../state_machine.c **** 			{
 208              	 .loc 1 59 0 is_stmt 0 discriminator 1
 209 00e8 474B     	 ldr r3,.L20+8
 210 00ea 1B88     	 ldrh r3,[r3]
 211 00ec 03F00F03 	 and r3,r3,#15
 212 00f0 012B     	 cmp r3,#1
 213 00f2 13D1     	 bne .L10
  61:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
 214              	 .loc 1 61 0 is_stmt 1
 215 00f4 FFF7FEFF 	 bl drive_on
  62:../state_machine.c **** 				drive_status |= STATE_1_DRIVE_ON;
 216              	 .loc 1 62 0
 217 00f8 414B     	 ldr r3,.L20
 218 00fa 1B88     	 ldrh r3,[r3]
 219 00fc 23F00F03 	 bic r3,r3,#15
 220 0100 9AB2     	 uxth r2,r3
 221 0102 3F4B     	 ldr r3,.L20
 222 0104 1A80     	 strh r2,[r3]
  63:../state_machine.c **** 				drive_command_old = drive_command;
 223              	 .loc 1 63 0
 224 0106 3E4B     	 ldr r3,.L20
 225 0108 1B88     	 ldrh r3,[r3]
 226 010a 43F00103 	 orr r3,r3,#1
 227 010e 9AB2     	 uxth r2,r3
 228 0110 3B4B     	 ldr r3,.L20
 229 0112 1A80     	 strh r2,[r3]
  64:../state_machine.c **** 			}
 230              	 .loc 1 64 0
 231 0114 3C4B     	 ldr r3,.L20+8
 232 0116 1A88     	 ldrh r2,[r3]
 233 0118 3A4B     	 ldr r3,.L20+4
 234 011a 1A80     	 strh r2,[r3]
 235              	.L10:
  67:../state_machine.c **** 			{
 236              	 .loc 1 67 0
 237 011c 394B     	 ldr r3,.L20+4
 238 011e 1B88     	 ldrh r3,[r3]
 239 0120 03F00F03 	 and r3,r3,#15
 240 0124 022B     	 cmp r3,#2
 241 0126 16D1     	 bne .L11
  67:../state_machine.c **** 			{
 242              	 .loc 1 67 0 is_stmt 0 discriminator 1
 243 0128 374B     	 ldr r3,.L20+8
 244 012a 1B88     	 ldrh r3,[r3]
 245 012c 03F00F03 	 and r3,r3,#15
 246 0130 002B     	 cmp r3,#0
 247 0132 10D1     	 bne .L11
  69:../state_machine.c **** 				drive_status &= DRIVE_STATUS_CLEAR;
 248              	 .loc 1 69 0 is_stmt 1
 249 0134 FFF7FEFF 	 bl drive_disabled
  70:../state_machine.c **** 				drive_status |= STATE_0_DRIVE_DISABLED;
 250              	 .loc 1 70 0
 251 0138 314B     	 ldr r3,.L20
 252 013a 1B88     	 ldrh r3,[r3]
 253 013c 23F00F03 	 bic r3,r3,#15
 254 0140 9AB2     	 uxth r2,r3
 255 0142 2F4B     	 ldr r3,.L20
 256 0144 1A80     	 strh r2,[r3]
  71:../state_machine.c **** 				drive_command_old = drive_command;
 257              	 .loc 1 71 0
 258 0146 2E4B     	 ldr r3,.L20
 259 0148 1A88     	 ldrh r2,[r3]
 260 014a 2D4B     	 ldr r3,.L20
 261 014c 1A80     	 strh r2,[r3]
  72:../state_machine.c **** 			}
 262              	 .loc 1 72 0
 263 014e 2E4B     	 ldr r3,.L20+8
 264 0150 1A88     	 ldrh r2,[r3]
 265 0152 2C4B     	 ldr r3,.L20+4
 266 0154 1A80     	 strh r2,[r3]
 267              	.L11:
  75:../state_machine.c **** 		{
 268              	 .loc 1 75 0
 269 0156 2B4B     	 ldr r3,.L20+4
 270 0158 1B88     	 ldrh r3,[r3]
 271 015a 03F01003 	 and r3,r3,#16
 272 015e 002B     	 cmp r3,#0
 273 0160 4BD1     	 bne .L12
  75:../state_machine.c **** 		{
 274              	 .loc 1 75 0 is_stmt 0 discriminator 1
 275 0162 294B     	 ldr r3,.L20+8
 276 0164 1B88     	 ldrh r3,[r3]
 277 0166 03F01003 	 and r3,r3,#16
 278 016a 002B     	 cmp r3,#0
 279 016c 45D0     	 beq .L12
  75:../state_machine.c **** 		{
 280              	 .loc 1 75 0 discriminator 2
 281 016e 264B     	 ldr r3,.L20+8
 282 0170 1B88     	 ldrh r3,[r3]
 283 0172 03F00F03 	 and r3,r3,#15
 284 0176 022B     	 cmp r3,#2
 285 0178 3FD1     	 bne .L12
  78:../state_machine.c **** 			{
 286              	 .loc 1 78 0 is_stmt 1
 287 017a 234B     	 ldr r3,.L20+8
 288 017c 1B88     	 ldrh r3,[r3]
 289 017e 03F48063 	 and r3,r3,#1024
 290 0182 002B     	 cmp r3,#0
 291 0184 12D0     	 beq .L13
  81:../state_machine.c **** 				//Check to see if SPD loop is OFF and I loop is ON to activate PID regulator
 292              	 .loc 1 81 0
 293 0186 214B     	 ldr r3,.L20+12
 294 0188 0022     	 movs r2,#0
 295 018a 1A70     	 strb r2,[r3]
  83:../state_machine.c **** 				{
 296              	 .loc 1 83 0
 297 018c 1E4B     	 ldr r3,.L20+8
 298 018e 1B88     	 ldrh r3,[r3]
 299 0190 03F40073 	 and r3,r3,#512
 300 0194 002B     	 cmp r3,#0
 301 0196 29D1     	 bne .L15
  83:../state_machine.c **** 				{
 302              	 .loc 1 83 0 is_stmt 0 discriminator 1
 303 0198 1B4B     	 ldr r3,.L20+8
 304 019a 1B88     	 ldrh r3,[r3]
 305 019c 03F48073 	 and r3,r3,#256
 306 01a0 002B     	 cmp r3,#0
 307 01a2 23D0     	 beq .L15
  85:../state_machine.c **** 				}
 308              	 .loc 1 85 0 is_stmt 1
 309 01a4 1A4B     	 ldr r3,.L20+16
 310 01a6 0122     	 movs r2,#1
 311 01a8 1A70     	 strb r2,[r3]
 312 01aa 1FE0     	 b .L15
 313              	.L13:
  88:../state_machine.c **** 			{
 314              	 .loc 1 88 0
 315 01ac 164B     	 ldr r3,.L20+8
 316 01ae 1B88     	 ldrh r3,[r3]
 317 01b0 03F40073 	 and r3,r3,#512
 318 01b4 002B     	 cmp r3,#0
 319 01b6 03D0     	 beq .L16
  91:../state_machine.c **** 			}
 320              	 .loc 1 91 0
 321 01b8 144B     	 ldr r3,.L20+12
 322 01ba 0122     	 movs r2,#1
 323 01bc 1A70     	 strb r2,[r3]
 324 01be 15E0     	 b .L15
 325              	.L16:
  93:../state_machine.c **** 			{
 326              	 .loc 1 93 0
 327 01c0 114B     	 ldr r3,.L20+8
 328 01c2 1B88     	 ldrh r3,[r3]
 329 01c4 03F48073 	 and r3,r3,#256
 330 01c8 002B     	 cmp r3,#0
 331 01ca 0CD0     	 beq .L17
  96:../state_machine.c **** 				if(DRIVE_COMMAND_TEST_MSK & TUNE_TEST)
 332              	 .loc 1 96 0
 333 01cc 0F4B     	 ldr r3,.L20+12
 334 01ce 0222     	 movs r2,#2
 335 01d0 1A70     	 strb r2,[r3]
  97:../state_machine.c **** 				{
 336              	 .loc 1 97 0
 337 01d2 0D4B     	 ldr r3,.L20+8
 338 01d4 1B88     	 ldrh r3,[r3]
 339 01d6 9BB2     	 uxth r3,r3
 340 01d8 1BB2     	 sxth r3,r3
 341 01da 002B     	 cmp r3,#0
 342 01dc 06DA     	 bge .L15
  99:../state_machine.c **** 				}
 343              	 .loc 1 99 0
 344 01de 0D4B     	 ldr r3,.L20+20
 345 01e0 0122     	 movs r2,#1
 346 01e2 1A70     	 strb r2,[r3]
 347 01e4 02E0     	 b .L15
 348              	.L17:
 105:../state_machine.c **** 			}
 349              	 .loc 1 105 0
 350 01e6 094B     	 ldr r3,.L20+12
 351 01e8 0322     	 movs r2,#3
 352 01ea 1A70     	 strb r2,[r3]
 353              	.L15:
 107:../state_machine.c **** 			drive_command_old = drive_command;
 354              	 .loc 1 107 0
 355 01ec FFF7FEFF 	 bl compute_motion
 108:../state_machine.c **** 		}
 356              	 .loc 1 108 0
 357 01f0 054B     	 ldr r3,.L20+8
 358 01f2 1A88     	 ldrh r2,[r3]
 359 01f4 034B     	 ldr r3,.L20+4
 360 01f6 1A80     	 strh r2,[r3]
 111:../state_machine.c **** 	default:
 361              	 .loc 1 111 0
 362 01f8 FFE7     	 b .L19
 363              	.L12:
 364              	.L19:
 365 01fa 00BF     	 nop
 366              	.L1:
 114:../state_machine.c **** 	}
 115:../state_machine.c **** }
 367              	 .loc 1 115 0
 368 01fc 80BD     	 pop {r7,pc}
 369              	.L21:
 370 01fe 00BF     	 .align 2
 371              	.L20:
 372 0200 00000000 	 .word drive_status
 373 0204 00000000 	 .word drive_command_old
 374 0208 00000000 	 .word drive_command
 375 020c 00000000 	 .word ref_type_select
 376 0210 00000000 	 .word pid_status
 377 0214 00000000 	 .word tune_test_control
 378              	 .cfi_endproc
 379              	.LFE196:
 381              	 .section .text.drive_disabled,"ax",%progbits
 382              	 .align 2
 383              	 .global drive_disabled
 384              	 .thumb
 385              	 .thumb_func
 387              	drive_disabled:
 388              	.LFB197:
 116:../state_machine.c **** 
 117:../state_machine.c **** void drive_disabled (void)
 118:../state_machine.c **** {
 389              	 .loc 1 118 0
 390              	 .cfi_startproc
 391              	 
 392              	 
 393 0000 80B5     	 push {r7,lr}
 394              	.LCFI2:
 395              	 .cfi_def_cfa_offset 8
 396              	 .cfi_offset 7,-8
 397              	 .cfi_offset 14,-4
 398 0002 00AF     	 add r7,sp,#0
 399              	.LCFI3:
 400              	 .cfi_def_cfa_register 7
 119:../state_machine.c **** 	motion_off();						//PWM off
 401              	 .loc 1 119 0
 402 0004 FFF7FEFF 	 bl motion_off
 120:../state_machine.c **** 	loop_control = LOOP_CONTROL_OFF;	//control_loop_off
 403              	 .loc 1 120 0
 404 0008 074B     	 ldr r3,.L23
 405 000a 0022     	 movs r2,#0
 406 000c 1A70     	 strb r2,[r3]
 121:../state_machine.c **** 	ref_gen_status = STATUS_0_DISABLED;
 407              	 .loc 1 121 0
 408 000e 074B     	 ldr r3,.L23+4
 409 0010 0022     	 movs r2,#0
 410 0012 1A70     	 strb r2,[r3]
 122:../state_machine.c **** 	tune_test_control = OFF;
 411              	 .loc 1 122 0
 412 0014 064B     	 ldr r3,.L23+8
 413 0016 0022     	 movs r2,#0
 414 0018 1A70     	 strb r2,[r3]
 123:../state_machine.c **** 	motion_config = OFF;
 415              	 .loc 1 123 0
 416 001a 064B     	 ldr r3,.L23+12
 417 001c 0022     	 movs r2,#0
 418 001e 1A70     	 strb r2,[r3]
 124:../state_machine.c **** 	pid_status = OFF;
 419              	 .loc 1 124 0
 420 0020 054B     	 ldr r3,.L23+16
 421 0022 0022     	 movs r2,#0
 422 0024 1A70     	 strb r2,[r3]
 125:../state_machine.c **** }
 423              	 .loc 1 125 0
 424 0026 80BD     	 pop {r7,pc}
 425              	.L24:
 426              	 .align 2
 427              	.L23:
 428 0028 00000000 	 .word loop_control
 429 002c 00000000 	 .word ref_gen_status
 430 0030 00000000 	 .word tune_test_control
 431 0034 00000000 	 .word motion_config
 432 0038 00000000 	 .word pid_status
 433              	 .cfi_endproc
 434              	.LFE197:
 436              	 .section .text.drive_on,"ax",%progbits
 437              	 .align 2
 438              	 .global drive_on
 439              	 .thumb
 440              	 .thumb_func
 442              	drive_on:
 443              	.LFB198:
 126:../state_machine.c **** 
 127:../state_machine.c **** void drive_on (void)
 128:../state_machine.c **** {
 444              	 .loc 1 128 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448 0000 80B5     	 push {r7,lr}
 449              	.LCFI4:
 450              	 .cfi_def_cfa_offset 8
 451              	 .cfi_offset 7,-8
 452              	 .cfi_offset 14,-4
 453 0002 00AF     	 add r7,sp,#0
 454              	.LCFI5:
 455              	 .cfi_def_cfa_register 7
 129:../state_machine.c **** 	motion_off();						//PWM off
 456              	 .loc 1 129 0
 457 0004 FFF7FEFF 	 bl motion_off
 130:../state_machine.c **** 	current_offset();
 458              	 .loc 1 130 0
 459 0008 FFF7FEFF 	 bl current_offset
 131:../state_machine.c **** 	init_position();
 460              	 .loc 1 131 0
 461 000c FFF7FEFF 	 bl init_position
 132:../state_machine.c **** 	pwm_update(0, 0, 0);				//pwm_on_50%
 462              	 .loc 1 132 0
 463 0010 0020     	 movs r0,#0
 464 0012 0021     	 movs r1,#0
 465 0014 0022     	 movs r2,#0
 466 0016 FFF7FEFF 	 bl pwm_update
 133:../state_machine.c **** 	motion_on();
 467              	 .loc 1 133 0
 468 001a FFF7FEFF 	 bl motion_on
 134:../state_machine.c **** 	loop_control = LOOP_CONTROL_OFF;	//control_loop_off
 469              	 .loc 1 134 0
 470 001e 084B     	 ldr r3,.L26
 471 0020 0022     	 movs r2,#0
 472 0022 1A70     	 strb r2,[r3]
 135:../state_machine.c **** 	ref_gen_status = STATUS_0_DISABLED;
 473              	 .loc 1 135 0
 474 0024 074B     	 ldr r3,.L26+4
 475 0026 0022     	 movs r2,#0
 476 0028 1A70     	 strb r2,[r3]
 136:../state_machine.c **** 	tune_test_control = OFF;
 477              	 .loc 1 136 0
 478 002a 074B     	 ldr r3,.L26+8
 479 002c 0022     	 movs r2,#0
 480 002e 1A70     	 strb r2,[r3]
 137:../state_machine.c **** 	motion_config = OFF;
 481              	 .loc 1 137 0
 482 0030 064B     	 ldr r3,.L26+12
 483 0032 0022     	 movs r2,#0
 484 0034 1A70     	 strb r2,[r3]
 138:../state_machine.c **** 	pid_status = OFF;
 485              	 .loc 1 138 0
 486 0036 064B     	 ldr r3,.L26+16
 487 0038 0022     	 movs r2,#0
 488 003a 1A70     	 strb r2,[r3]
 139:../state_machine.c **** }
 489              	 .loc 1 139 0
 490 003c 80BD     	 pop {r7,pc}
 491              	.L27:
 492 003e 00BF     	 .align 2
 493              	.L26:
 494 0040 00000000 	 .word loop_control
 495 0044 00000000 	 .word ref_gen_status
 496 0048 00000000 	 .word tune_test_control
 497 004c 00000000 	 .word motion_config
 498 0050 00000000 	 .word pid_status
 499              	 .cfi_endproc
 500              	.LFE198:
 502              	 .section .text.operation_enabled,"ax",%progbits
 503              	 .align 2
 504              	 .global operation_enabled
 505              	 .thumb
 506              	 .thumb_func
 508              	operation_enabled:
 509              	.LFB199:
 140:../state_machine.c **** 
 141:../state_machine.c **** void operation_enabled (void)
 142:../state_machine.c **** {
 510              	 .loc 1 142 0
 511              	 .cfi_startproc
 512              	 
 513              	 
 514              	 
 515 0000 80B4     	 push {r7}
 516              	.LCFI6:
 517              	 .cfi_def_cfa_offset 4
 518              	 .cfi_offset 7,-4
 519 0002 00AF     	 add r7,sp,#0
 520              	.LCFI7:
 521              	 .cfi_def_cfa_register 7
 143:../state_machine.c **** 	loop_control = LOOP_CONTROL_ON;		//control_loop_on
 522              	 .loc 1 143 0
 523 0004 044B     	 ldr r3,.L29
 524 0006 0122     	 movs r2,#1
 525 0008 1A70     	 strb r2,[r3]
 144:../state_machine.c **** 	ref_gen_status = STATUS_0_DISABLED;
 526              	 .loc 1 144 0
 527 000a 044B     	 ldr r3,.L29+4
 528 000c 0022     	 movs r2,#0
 529 000e 1A70     	 strb r2,[r3]
 145:../state_machine.c **** 
 146:../state_machine.c **** }
 530              	 .loc 1 146 0
 531 0010 BD46     	 mov sp,r7
 532              	.LCFI8:
 533              	 .cfi_def_cfa_register 13
 534              	 
 535 0012 5DF8047B 	 ldr r7,[sp],#4
 536              	.LCFI9:
 537              	 .cfi_restore 7
 538              	 .cfi_def_cfa_offset 0
 539 0016 7047     	 bx lr
 540              	.L30:
 541              	 .align 2
 542              	.L29:
 543 0018 00000000 	 .word loop_control
 544 001c 00000000 	 .word ref_gen_status
 545              	 .cfi_endproc
 546              	.LFE199:
 548              	 .section .text.compute_motion,"ax",%progbits
 549              	 .align 2
 550              	 .global compute_motion
 551              	 .thumb
 552              	 .thumb_func
 554              	compute_motion:
 555              	.LFB200:
 147:../state_machine.c **** 
 148:../state_machine.c **** void compute_motion (void)
 149:../state_machine.c **** {
 556              	 .loc 1 149 0
 557              	 .cfi_startproc
 558              	 
 559              	 
 560 0000 80B5     	 push {r7,lr}
 561              	.LCFI10:
 562              	 .cfi_def_cfa_offset 8
 563              	 .cfi_offset 7,-8
 564              	 .cfi_offset 14,-4
 565 0002 00AF     	 add r7,sp,#0
 566              	.LCFI11:
 567              	 .cfi_def_cfa_register 7
 150:../state_machine.c **** 	reference_generator_compute();
 568              	 .loc 1 150 0
 569 0004 FFF7FEFF 	 bl reference_generator_compute
 151:../state_machine.c **** 	motion_config = ON;
 570              	 .loc 1 151 0
 571 0008 014B     	 ldr r3,.L32
 572 000a 0122     	 movs r2,#1
 573 000c 1A70     	 strb r2,[r3]
 152:../state_machine.c **** }
 574              	 .loc 1 152 0
 575 000e 80BD     	 pop {r7,pc}
 576              	.L33:
 577              	 .align 2
 578              	.L32:
 579 0010 00000000 	 .word motion_config
 580              	 .cfi_endproc
 581              	.LFE200:
 583              	 .text
 584              	.Letext0:
 585              	 .file 2 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 586              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 587              	 .file 4 "../reference_generator.h"
 588              	 .file 5 "C:/CODE/Licenta/Libraries/CMSIS/Include/core_cm4.h"
 589              	 .file 6 "../main.h"
 590              	 .file 7 "../transform.h"
DEFINED SYMBOLS
                            *ABS*:00000000 state_machine.c
                            *COM*:00000004 CCU8_CC8_CR1_CR1_Value
                            *COM*:00000004 theta_fast
    {standard input}:26     .bss.drive_status:00000000 drive_status
    {standard input}:23     .bss.drive_status:00000000 $d
    {standard input}:33     .bss.drive_command:00000000 drive_command
    {standard input}:30     .bss.drive_command:00000000 $d
    {standard input}:40     .bss.drive_command_old:00000000 drive_command_old
    {standard input}:37     .bss.drive_command_old:00000000 $d
    {standard input}:46     .bss.loop_control:00000000 loop_control
    {standard input}:47     .bss.loop_control:00000000 $d
    {standard input}:52     .bss.tune_test_control:00000000 tune_test_control
    {standard input}:53     .bss.tune_test_control:00000000 $d
    {standard input}:58     .bss.motion_config:00000000 motion_config
    {standard input}:59     .bss.motion_config:00000000 $d
    {standard input}:61     .text.state_machine:00000000 $t
    {standard input}:66     .text.state_machine:00000000 state_machine
    {standard input}:442    .text.drive_on:00000000 drive_on
    {standard input}:508    .text.operation_enabled:00000000 operation_enabled
    {standard input}:387    .text.drive_disabled:00000000 drive_disabled
    {standard input}:554    .text.compute_motion:00000000 compute_motion
    {standard input}:372    .text.state_machine:00000200 $d
    {standard input}:382    .text.drive_disabled:00000000 $t
    {standard input}:428    .text.drive_disabled:00000028 $d
    {standard input}:437    .text.drive_on:00000000 $t
    {standard input}:494    .text.drive_on:00000040 $d
    {standard input}:503    .text.operation_enabled:00000000 $t
    {standard input}:543    .text.operation_enabled:00000018 $d
    {standard input}:549    .text.compute_motion:00000000 $t
    {standard input}:579    .text.compute_motion:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ref_type_select
pid_status
motion_off
ref_gen_status
current_offset
init_position
pwm_update
motion_on
reference_generator_compute
