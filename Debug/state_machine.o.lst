   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "state_machine.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm CCU8_CC8_CR1_CR1_Value,4,4
  20              	 .global drive_status
  21              	 .section .bss.drive_status,"aw",%nobits
  22              	 .align 1
  25              	drive_status:
  26 0000 0000     	 .space 2
  27              	 .global drive_command
  28              	 .section .bss.drive_command,"aw",%nobits
  29              	 .align 1
  32              	drive_command:
  33 0000 0000     	 .space 2
  34              	 .global drive_command_old
  35              	 .section .bss.drive_command_old,"aw",%nobits
  36              	 .align 1
  39              	drive_command_old:
  40 0000 0000     	 .space 2
  41              	 .global loop_control
  42              	 .section .bss.loop_control,"aw",%nobits
  45              	loop_control:
  46 0000 00       	 .space 1
  47              	 .section .text.state_machine,"ax",%progbits
  48              	 .align 2
  49              	 .global state_machine
  50              	 .thumb
  51              	 .thumb_func
  53              	state_machine:
  54              	.LFB196:
  55              	 .file 1 "../state_machine.c"
   1:../state_machine.c **** /*
   2:../state_machine.c ****  * state_machine.c
   3:../state_machine.c ****  *
   4:../state_machine.c ****  *  Created on: 24 Mar 2023
   5:../state_machine.c ****  *      Author: xraid
   6:../state_machine.c ****  */
   7:../state_machine.c **** #include "main.h"
   8:../state_machine.c **** #include "state_machine.h"
   9:../state_machine.c **** #include "driver_adc.h"
  10:../state_machine.c **** #include "driver_pwm.h"
  11:../state_machine.c **** #include "motor_data_update.h"
  12:../state_machine.c **** #include "reference_generator.h"
  13:../state_machine.c **** #include "transform.h"
  14:../state_machine.c **** 
  15:../state_machine.c **** uint16_t drive_status = STATE_0_DRIVE_DISABLED;
  16:../state_machine.c **** uint16_t drive_command = STATE_0_DRIVE_DISABLED;
  17:../state_machine.c **** uint16_t drive_command_old = STATE_0_DRIVE_DISABLED;
  18:../state_machine.c **** uint8_t loop_control = LOOP_CONTROL_OFF;
  19:../state_machine.c **** 
  20:../state_machine.c **** void state_machine (void)
  21:../state_machine.c **** {
  56              	 .loc 1 21 0
  57              	 .cfi_startproc
  58              	 
  59              	 
  60 0000 80B5     	 push {r7,lr}
  61              	.LCFI0:
  62              	 .cfi_def_cfa_offset 8
  63              	 .cfi_offset 7,-8
  64              	 .cfi_offset 14,-4
  65 0002 00AF     	 add r7,sp,#0
  66              	.LCFI1:
  67              	 .cfi_def_cfa_register 7
  22:../state_machine.c **** 	switch(drive_status & 0xF)
  68              	 .loc 1 22 0
  69 0004 504B     	 ldr r3,.L18
  70 0006 1B88     	 ldrh r3,[r3]
  71 0008 03F00F03 	 and r3,r3,#15
  72 000c 012B     	 cmp r3,#1
  73 000e 1BD0     	 beq .L3
  74 0010 022B     	 cmp r3,#2
  75 0012 30D0     	 beq .L4
  76 0014 002B     	 cmp r3,#0
  77 0016 00D0     	 beq .L5
  23:../state_machine.c **** 	{
  24:../state_machine.c **** 	case (STATE_0_DRIVE_DISABLED):
  25:../state_machine.c **** 		//Transition 0->1
  26:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_0_DRIVE_DISABLED) && (DRIVE_COMMAND_STATE_MSK == STATE_
  27:../state_machine.c **** 			{
  28:../state_machine.c **** 				drive_on();
  29:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
  30:../state_machine.c **** 				drive_command_old = drive_command;
  31:../state_machine.c **** 			}
  32:../state_machine.c **** 			break;
  33:../state_machine.c **** 	case (STATE_1_DRIVE_ON):
  34:../state_machine.c **** 		//Transition 1->2
  35:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_1_DRIVE_ON) && (DRIVE_COMMAND_STATE_MSK == STATE_2_OPER
  36:../state_machine.c **** 			{
  37:../state_machine.c **** 				operation_enabled();
  38:../state_machine.c **** 				drive_status = STATE_2_OPERATION_ENABLED;
  39:../state_machine.c **** 				drive_command_old = drive_command;
  40:../state_machine.c **** 			}
  41:../state_machine.c **** 			break;
  42:../state_machine.c **** 	case (STATE_2_OPERATION_ENABLED):
  43:../state_machine.c **** 	{
  44:../state_machine.c **** 		//Transition 2->1
  45:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_2_OPERATION_ENABLED) && (DRIVE_COMMAND_STATE_MSK == STA
  46:../state_machine.c **** 			{
  47:../state_machine.c **** 				drive_on();
  48:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
  49:../state_machine.c **** 				drive_command_old = drive_command;
  50:../state_machine.c **** 			}
  51:../state_machine.c **** 		//Transition 2->0
  52:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_2_OPERATION_ENABLED) && (DRIVE_COMMAND_STATE_MSK == STA
  53:../state_machine.c **** 			{
  54:../state_machine.c **** 				drive_disabled();
  55:../state_machine.c **** 				drive_status = STATE_0_DRIVE_DISABLED;
  56:../state_machine.c **** 				drive_command_old = drive_command;
  57:../state_machine.c **** 			}
  58:../state_machine.c **** 		//Check for update
  59:../state_machine.c **** 		if(!(DRIVE_COMMAND_UPDATE_OLD_MSK & UPDATE_MSK) && (DRIVE_COMMAND_UPDATE_MSK & UPDATE_MSK))
  60:../state_machine.c **** 		{
  61:../state_machine.c **** 			if(DRIVE_COMMAND_REF_MSK & REF_POS_MSK)
  62:../state_machine.c **** 			{
  63:../state_machine.c **** 				//POS REF
  64:../state_machine.c **** 				ref_type_select = REF_POS;
  65:../state_machine.c **** 			}
  66:../state_machine.c **** 			else if(DRIVE_COMMAND_REF_MSK & REF_SPD_MSK)
  67:../state_machine.c **** 			{
  68:../state_machine.c **** 				//SPD REF
  69:../state_machine.c **** 				ref_type_select = REF_SPD;
  70:../state_machine.c **** 			}
  71:../state_machine.c **** 			else if(DRIVE_COMMAND_REF_MSK & REF_I_MSK)
  72:../state_machine.c **** 			{
  73:../state_machine.c **** 				//I REFF
  74:../state_machine.c **** 				ref_type_select = REF_I;
  75:../state_machine.c **** 				if(DRIVE_COMMAND_TEST_MSK & TUNE_TEST)
  76:../state_machine.c **** 				{
  77:../state_machine.c **** 					theta_fast = 0;
  78:../state_machine.c **** 					//disable theta computation
  79:../state_machine.c **** 				}
  80:../state_machine.c **** 			}
  81:../state_machine.c **** 			else
  82:../state_machine.c **** 			{
  83:../state_machine.c **** 				//U REF
  84:../state_machine.c **** 				ref_type_select = REF_U;
  85:../state_machine.c **** 			}
  86:../state_machine.c **** 			drive_command_old = drive_command;
  87:../state_machine.c **** 		}
  88:../state_machine.c **** 	}
  89:../state_machine.c **** 			break;
  90:../state_machine.c **** 	default:
  91:../state_machine.c **** 		break;
  78              	 .loc 1 91 0
  79 0018 94E0     	 b .L1
  80              	.L5:
  26:../state_machine.c **** 			{
  81              	 .loc 1 26 0
  82 001a 4C4B     	 ldr r3,.L18+4
  83 001c 1B88     	 ldrh r3,[r3]
  84 001e 03F00F03 	 and r3,r3,#15
  85 0022 002B     	 cmp r3,#0
  86 0024 0FD1     	 bne .L6
  26:../state_machine.c **** 			{
  87              	 .loc 1 26 0 is_stmt 0 discriminator 1
  88 0026 4A4B     	 ldr r3,.L18+8
  89 0028 1B88     	 ldrh r3,[r3]
  90 002a 03F00F03 	 and r3,r3,#15
  91 002e 012B     	 cmp r3,#1
  92 0030 09D1     	 bne .L6
  28:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
  93              	 .loc 1 28 0 is_stmt 1
  94 0032 FFF7FEFF 	 bl drive_on
  29:../state_machine.c **** 				drive_command_old = drive_command;
  95              	 .loc 1 29 0
  96 0036 444B     	 ldr r3,.L18
  97 0038 0122     	 movs r2,#1
  98 003a 1A80     	 strh r2,[r3]
  30:../state_machine.c **** 			}
  99              	 .loc 1 30 0
 100 003c 444B     	 ldr r3,.L18+8
 101 003e 1A88     	 ldrh r2,[r3]
 102 0040 424B     	 ldr r3,.L18+4
 103 0042 1A80     	 strh r2,[r3]
  32:../state_machine.c **** 	case (STATE_1_DRIVE_ON):
 104              	 .loc 1 32 0
 105 0044 7EE0     	 b .L1
 106              	.L6:
 107 0046 7DE0     	 b .L1
 108              	.L3:
  35:../state_machine.c **** 			{
 109              	 .loc 1 35 0
 110 0048 404B     	 ldr r3,.L18+4
 111 004a 1B88     	 ldrh r3,[r3]
 112 004c 03F00F03 	 and r3,r3,#15
 113 0050 012B     	 cmp r3,#1
 114 0052 0FD1     	 bne .L8
  35:../state_machine.c **** 			{
 115              	 .loc 1 35 0 is_stmt 0 discriminator 1
 116 0054 3E4B     	 ldr r3,.L18+8
 117 0056 1B88     	 ldrh r3,[r3]
 118 0058 03F00F03 	 and r3,r3,#15
 119 005c 022B     	 cmp r3,#2
 120 005e 09D1     	 bne .L8
  37:../state_machine.c **** 				drive_status = STATE_2_OPERATION_ENABLED;
 121              	 .loc 1 37 0 is_stmt 1
 122 0060 FFF7FEFF 	 bl operation_enabled
  38:../state_machine.c **** 				drive_command_old = drive_command;
 123              	 .loc 1 38 0
 124 0064 384B     	 ldr r3,.L18
 125 0066 0222     	 movs r2,#2
 126 0068 1A80     	 strh r2,[r3]
  39:../state_machine.c **** 			}
 127              	 .loc 1 39 0
 128 006a 394B     	 ldr r3,.L18+8
 129 006c 1A88     	 ldrh r2,[r3]
 130 006e 374B     	 ldr r3,.L18+4
 131 0070 1A80     	 strh r2,[r3]
  41:../state_machine.c **** 	case (STATE_2_OPERATION_ENABLED):
 132              	 .loc 1 41 0
 133 0072 67E0     	 b .L1
 134              	.L8:
 135 0074 66E0     	 b .L1
 136              	.L4:
  45:../state_machine.c **** 			{
 137              	 .loc 1 45 0
 138 0076 354B     	 ldr r3,.L18+4
 139 0078 1B88     	 ldrh r3,[r3]
 140 007a 03F00F03 	 and r3,r3,#15
 141 007e 022B     	 cmp r3,#2
 142 0080 0ED1     	 bne .L9
  45:../state_machine.c **** 			{
 143              	 .loc 1 45 0 is_stmt 0 discriminator 1
 144 0082 334B     	 ldr r3,.L18+8
 145 0084 1B88     	 ldrh r3,[r3]
 146 0086 03F00F03 	 and r3,r3,#15
 147 008a 012B     	 cmp r3,#1
 148 008c 08D1     	 bne .L9
  47:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
 149              	 .loc 1 47 0 is_stmt 1
 150 008e FFF7FEFF 	 bl drive_on
  48:../state_machine.c **** 				drive_command_old = drive_command;
 151              	 .loc 1 48 0
 152 0092 2D4B     	 ldr r3,.L18
 153 0094 0122     	 movs r2,#1
 154 0096 1A80     	 strh r2,[r3]
  49:../state_machine.c **** 			}
 155              	 .loc 1 49 0
 156 0098 2D4B     	 ldr r3,.L18+8
 157 009a 1A88     	 ldrh r2,[r3]
 158 009c 2B4B     	 ldr r3,.L18+4
 159 009e 1A80     	 strh r2,[r3]
 160              	.L9:
  52:../state_machine.c **** 			{
 161              	 .loc 1 52 0
 162 00a0 2A4B     	 ldr r3,.L18+4
 163 00a2 1B88     	 ldrh r3,[r3]
 164 00a4 03F00F03 	 and r3,r3,#15
 165 00a8 022B     	 cmp r3,#2
 166 00aa 0ED1     	 bne .L10
  52:../state_machine.c **** 			{
 167              	 .loc 1 52 0 is_stmt 0 discriminator 1
 168 00ac 284B     	 ldr r3,.L18+8
 169 00ae 1B88     	 ldrh r3,[r3]
 170 00b0 03F00F03 	 and r3,r3,#15
 171 00b4 002B     	 cmp r3,#0
 172 00b6 08D1     	 bne .L10
  54:../state_machine.c **** 				drive_status = STATE_0_DRIVE_DISABLED;
 173              	 .loc 1 54 0 is_stmt 1
 174 00b8 FFF7FEFF 	 bl drive_disabled
  55:../state_machine.c **** 				drive_command_old = drive_command;
 175              	 .loc 1 55 0
 176 00bc 224B     	 ldr r3,.L18
 177 00be 0022     	 movs r2,#0
 178 00c0 1A80     	 strh r2,[r3]
  56:../state_machine.c **** 			}
 179              	 .loc 1 56 0
 180 00c2 234B     	 ldr r3,.L18+8
 181 00c4 1A88     	 ldrh r2,[r3]
 182 00c6 214B     	 ldr r3,.L18+4
 183 00c8 1A80     	 strh r2,[r3]
 184              	.L10:
  59:../state_machine.c **** 		{
 185              	 .loc 1 59 0
 186 00ca 204B     	 ldr r3,.L18+4
 187 00cc 1B88     	 ldrh r3,[r3]
 188 00ce 03F01003 	 and r3,r3,#16
 189 00d2 002B     	 cmp r3,#0
 190 00d4 35D1     	 bne .L11
  59:../state_machine.c **** 		{
 191              	 .loc 1 59 0 is_stmt 0 discriminator 1
 192 00d6 1E4B     	 ldr r3,.L18+8
 193 00d8 1B88     	 ldrh r3,[r3]
 194 00da 03F01003 	 and r3,r3,#16
 195 00de 002B     	 cmp r3,#0
 196 00e0 2FD0     	 beq .L11
  61:../state_machine.c **** 			{
 197              	 .loc 1 61 0 is_stmt 1
 198 00e2 1B4B     	 ldr r3,.L18+8
 199 00e4 1B88     	 ldrh r3,[r3]
 200 00e6 03F48073 	 and r3,r3,#256
 201 00ea 002B     	 cmp r3,#0
 202 00ec 03D0     	 beq .L12
  64:../state_machine.c **** 			}
 203              	 .loc 1 64 0
 204 00ee 194B     	 ldr r3,.L18+12
 205 00f0 0022     	 movs r2,#0
 206 00f2 1A70     	 strb r2,[r3]
 207 00f4 20E0     	 b .L13
 208              	.L12:
  66:../state_machine.c **** 			{
 209              	 .loc 1 66 0
 210 00f6 164B     	 ldr r3,.L18+8
 211 00f8 1B88     	 ldrh r3,[r3]
 212 00fa 03F40073 	 and r3,r3,#512
 213 00fe 002B     	 cmp r3,#0
 214 0100 03D0     	 beq .L14
  69:../state_machine.c **** 			}
 215              	 .loc 1 69 0
 216 0102 144B     	 ldr r3,.L18+12
 217 0104 0122     	 movs r2,#1
 218 0106 1A70     	 strb r2,[r3]
 219 0108 16E0     	 b .L13
 220              	.L14:
  71:../state_machine.c **** 			{
 221              	 .loc 1 71 0
 222 010a 114B     	 ldr r3,.L18+8
 223 010c 1B88     	 ldrh r3,[r3]
 224 010e 03F48063 	 and r3,r3,#1024
 225 0112 002B     	 cmp r3,#0
 226 0114 0DD0     	 beq .L15
  74:../state_machine.c **** 				if(DRIVE_COMMAND_TEST_MSK & TUNE_TEST)
 227              	 .loc 1 74 0
 228 0116 0F4B     	 ldr r3,.L18+12
 229 0118 0222     	 movs r2,#2
 230 011a 1A70     	 strb r2,[r3]
  75:../state_machine.c **** 				{
 231              	 .loc 1 75 0
 232 011c 0C4B     	 ldr r3,.L18+8
 233 011e 1B88     	 ldrh r3,[r3]
 234 0120 9BB2     	 uxth r3,r3
 235 0122 1BB2     	 sxth r3,r3
 236 0124 002B     	 cmp r3,#0
 237 0126 07DA     	 bge .L13
  77:../state_machine.c **** 					//disable theta computation
 238              	 .loc 1 77 0
 239 0128 0B4B     	 ldr r3,.L18+16
 240 012a 4FF00002 	 mov r2,#0
 241 012e 1A60     	 str r2,[r3]
 242 0130 02E0     	 b .L13
 243              	.L15:
  84:../state_machine.c **** 			}
 244              	 .loc 1 84 0
 245 0132 084B     	 ldr r3,.L18+12
 246 0134 0322     	 movs r2,#3
 247 0136 1A70     	 strb r2,[r3]
 248              	.L13:
  86:../state_machine.c **** 		}
 249              	 .loc 1 86 0
 250 0138 054B     	 ldr r3,.L18+8
 251 013a 1A88     	 ldrh r2,[r3]
 252 013c 034B     	 ldr r3,.L18+4
 253 013e 1A80     	 strh r2,[r3]
  89:../state_machine.c **** 	default:
 254              	 .loc 1 89 0
 255 0140 FFE7     	 b .L17
 256              	.L11:
 257              	.L17:
 258 0142 00BF     	 nop
 259              	.L1:
  92:../state_machine.c **** 	}
  93:../state_machine.c **** }
 260              	 .loc 1 93 0
 261 0144 80BD     	 pop {r7,pc}
 262              	.L19:
 263 0146 00BF     	 .align 2
 264              	.L18:
 265 0148 00000000 	 .word drive_status
 266 014c 00000000 	 .word drive_command_old
 267 0150 00000000 	 .word drive_command
 268 0154 00000000 	 .word ref_type_select
 269 0158 00000000 	 .word theta_fast
 270              	 .cfi_endproc
 271              	.LFE196:
 273              	 .section .text.drive_disabled,"ax",%progbits
 274              	 .align 2
 275              	 .global drive_disabled
 276              	 .thumb
 277              	 .thumb_func
 279              	drive_disabled:
 280              	.LFB197:
  94:../state_machine.c **** 
  95:../state_machine.c **** void drive_disabled (void)
  96:../state_machine.c **** {
 281              	 .loc 1 96 0
 282              	 .cfi_startproc
 283              	 
 284              	 
 285 0000 80B5     	 push {r7,lr}
 286              	.LCFI2:
 287              	 .cfi_def_cfa_offset 8
 288              	 .cfi_offset 7,-8
 289              	 .cfi_offset 14,-4
 290 0002 00AF     	 add r7,sp,#0
 291              	.LCFI3:
 292              	 .cfi_def_cfa_register 7
  97:../state_machine.c **** 	motion_off();
 293              	 .loc 1 97 0
 294 0004 FFF7FEFF 	 bl motion_off
  98:../state_machine.c **** 	loop_control = LOOP_CONTROL_OFF;	//control_loop_off
 295              	 .loc 1 98 0
 296 0008 034B     	 ldr r3,.L21
 297 000a 0022     	 movs r2,#0
 298 000c 1A70     	 strb r2,[r3]
  99:../state_machine.c **** 	ref_gen_status = STATUS_0_DISABLED;
 299              	 .loc 1 99 0
 300 000e 034B     	 ldr r3,.L21+4
 301 0010 0022     	 movs r2,#0
 302 0012 1A70     	 strb r2,[r3]
 100:../state_machine.c **** }
 303              	 .loc 1 100 0
 304 0014 80BD     	 pop {r7,pc}
 305              	.L22:
 306 0016 00BF     	 .align 2
 307              	.L21:
 308 0018 00000000 	 .word loop_control
 309 001c 00000000 	 .word ref_gen_status
 310              	 .cfi_endproc
 311              	.LFE197:
 313              	 .section .text.drive_on,"ax",%progbits
 314              	 .align 2
 315              	 .global drive_on
 316              	 .thumb
 317              	 .thumb_func
 319              	drive_on:
 320              	.LFB198:
 101:../state_machine.c **** 
 102:../state_machine.c **** void drive_on (void)
 103:../state_machine.c **** {
 321              	 .loc 1 103 0
 322              	 .cfi_startproc
 323              	 
 324              	 
 325 0000 80B5     	 push {r7,lr}
 326              	.LCFI4:
 327              	 .cfi_def_cfa_offset 8
 328              	 .cfi_offset 7,-8
 329              	 .cfi_offset 14,-4
 330 0002 00AF     	 add r7,sp,#0
 331              	.LCFI5:
 332              	 .cfi_def_cfa_register 7
 104:../state_machine.c **** 	motion_off();
 333              	 .loc 1 104 0
 334 0004 FFF7FEFF 	 bl motion_off
 105:../state_machine.c **** 	current_offset();
 335              	 .loc 1 105 0
 336 0008 FFF7FEFF 	 bl current_offset
 106:../state_machine.c **** 	init_position();
 337              	 .loc 1 106 0
 338 000c FFF7FEFF 	 bl init_position
 107:../state_machine.c **** 	pwm_update(0, 0, 0);				//pwm_on_50%
 339              	 .loc 1 107 0
 340 0010 0020     	 movs r0,#0
 341 0012 0021     	 movs r1,#0
 342 0014 0022     	 movs r2,#0
 343 0016 FFF7FEFF 	 bl pwm_update
 108:../state_machine.c **** 	loop_control = LOOP_CONTROL_OFF;	//control_loop_off
 344              	 .loc 1 108 0
 345 001a 034B     	 ldr r3,.L24
 346 001c 0022     	 movs r2,#0
 347 001e 1A70     	 strb r2,[r3]
 109:../state_machine.c **** 	ref_gen_status = STATUS_0_DISABLED;
 348              	 .loc 1 109 0
 349 0020 024B     	 ldr r3,.L24+4
 350 0022 0022     	 movs r2,#0
 351 0024 1A70     	 strb r2,[r3]
 110:../state_machine.c **** }
 352              	 .loc 1 110 0
 353 0026 80BD     	 pop {r7,pc}
 354              	.L25:
 355              	 .align 2
 356              	.L24:
 357 0028 00000000 	 .word loop_control
 358 002c 00000000 	 .word ref_gen_status
 359              	 .cfi_endproc
 360              	.LFE198:
 362              	 .section .text.operation_enabled,"ax",%progbits
 363              	 .align 2
 364              	 .global operation_enabled
 365              	 .thumb
 366              	 .thumb_func
 368              	operation_enabled:
 369              	.LFB199:
 111:../state_machine.c **** 
 112:../state_machine.c **** void operation_enabled (void)
 113:../state_machine.c **** {
 370              	 .loc 1 113 0
 371              	 .cfi_startproc
 372              	 
 373              	 
 374 0000 80B5     	 push {r7,lr}
 375              	.LCFI6:
 376              	 .cfi_def_cfa_offset 8
 377              	 .cfi_offset 7,-8
 378              	 .cfi_offset 14,-4
 379 0002 00AF     	 add r7,sp,#0
 380              	.LCFI7:
 381              	 .cfi_def_cfa_register 7
 114:../state_machine.c **** 	loop_control = LOOP_CONTROL_ON;		//control_loop_on
 382              	 .loc 1 114 0
 383 0004 034B     	 ldr r3,.L27
 384 0006 0122     	 movs r2,#1
 385 0008 1A70     	 strb r2,[r3]
 115:../state_machine.c **** 	motion_on();
 386              	 .loc 1 115 0
 387 000a FFF7FEFF 	 bl motion_on
 116:../state_machine.c **** 	reference_generator_compute();		//TESTING
 388              	 .loc 1 116 0
 389 000e FFF7FEFF 	 bl reference_generator_compute
 117:../state_machine.c **** }
 390              	 .loc 1 117 0
 391 0012 80BD     	 pop {r7,pc}
 392              	.L28:
 393              	 .align 2
 394              	.L27:
 395 0014 00000000 	 .word loop_control
 396              	 .cfi_endproc
 397              	.LFE199:
 399              	 .text
 400              	.Letext0:
 401              	 .file 2 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 402              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 403              	 .file 4 "../reference_generator.h"
 404              	 .file 5 "C:/CODE/Licenta/Libraries/CMSIS/Include/core_cm4.h"
 405              	 .file 6 "../main.h"
 406              	 .file 7 "../transform.h"
DEFINED SYMBOLS
                            *ABS*:00000000 state_machine.c
                            *COM*:00000004 CCU8_CC8_CR1_CR1_Value
    {standard input}:25     .bss.drive_status:00000000 drive_status
    {standard input}:22     .bss.drive_status:00000000 $d
    {standard input}:32     .bss.drive_command:00000000 drive_command
    {standard input}:29     .bss.drive_command:00000000 $d
    {standard input}:39     .bss.drive_command_old:00000000 drive_command_old
    {standard input}:36     .bss.drive_command_old:00000000 $d
    {standard input}:45     .bss.loop_control:00000000 loop_control
    {standard input}:46     .bss.loop_control:00000000 $d
    {standard input}:48     .text.state_machine:00000000 $t
    {standard input}:53     .text.state_machine:00000000 state_machine
    {standard input}:319    .text.drive_on:00000000 drive_on
    {standard input}:368    .text.operation_enabled:00000000 operation_enabled
    {standard input}:279    .text.drive_disabled:00000000 drive_disabled
    {standard input}:265    .text.state_machine:00000148 $d
    {standard input}:274    .text.drive_disabled:00000000 $t
    {standard input}:308    .text.drive_disabled:00000018 $d
    {standard input}:314    .text.drive_on:00000000 $t
    {standard input}:357    .text.drive_on:00000028 $d
    {standard input}:363    .text.operation_enabled:00000000 $t
    {standard input}:395    .text.operation_enabled:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ref_type_select
theta_fast
motion_off
ref_gen_status
current_offset
init_position
pwm_update
motion_on
reference_generator_compute
