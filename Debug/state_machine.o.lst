   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "state_machine.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm CCU8_CC8_CR1_CR1_Value,4,4
  20              	 .comm theta_fast,4,4
  21              	 .global drive_status
  22              	 .section .bss.drive_status,"aw",%nobits
  23              	 .align 1
  26              	drive_status:
  27 0000 0000     	 .space 2
  28              	 .global drive_command
  29              	 .section .bss.drive_command,"aw",%nobits
  30              	 .align 1
  33              	drive_command:
  34 0000 0000     	 .space 2
  35              	 .global drive_command_old
  36              	 .section .bss.drive_command_old,"aw",%nobits
  37              	 .align 1
  40              	drive_command_old:
  41 0000 0000     	 .space 2
  42              	 .global loop_control
  43              	 .section .bss.loop_control,"aw",%nobits
  46              	loop_control:
  47 0000 00       	 .space 1
  48              	 .section .text.state_machine,"ax",%progbits
  49              	 .align 2
  50              	 .global state_machine
  51              	 .thumb
  52              	 .thumb_func
  54              	state_machine:
  55              	.LFB196:
  56              	 .file 1 "../state_machine.c"
   1:../state_machine.c **** /*
   2:../state_machine.c ****  * state_machine.c
   3:../state_machine.c ****  *
   4:../state_machine.c ****  *  Created on: 24 Mar 2023
   5:../state_machine.c ****  *      Author: xraid
   6:../state_machine.c ****  */
   7:../state_machine.c **** #include "main.h"
   8:../state_machine.c **** #include "state_machine.h"
   9:../state_machine.c **** #include "driver_adc.h"
  10:../state_machine.c **** #include "driver_pwm.h"
  11:../state_machine.c **** #include "motor_data_update.h"
  12:../state_machine.c **** #include "reference_generator.h"
  13:../state_machine.c **** #include "transform.h"
  14:../state_machine.c **** 
  15:../state_machine.c **** uint16_t drive_status = STATE_0_DRIVE_DISABLED;
  16:../state_machine.c **** uint16_t drive_command = STATE_0_DRIVE_DISABLED;
  17:../state_machine.c **** uint16_t drive_command_old = STATE_0_DRIVE_DISABLED;
  18:../state_machine.c **** uint8_t loop_control = LOOP_CONTROL_OFF;
  19:../state_machine.c **** 
  20:../state_machine.c **** void state_machine (void)
  21:../state_machine.c **** {
  57              	 .loc 1 21 0
  58              	 .cfi_startproc
  59              	 
  60              	 
  61 0000 80B5     	 push {r7,lr}
  62              	.LCFI0:
  63              	 .cfi_def_cfa_offset 8
  64              	 .cfi_offset 7,-8
  65              	 .cfi_offset 14,-4
  66 0002 00AF     	 add r7,sp,#0
  67              	.LCFI1:
  68              	 .cfi_def_cfa_register 7
  22:../state_machine.c **** 	switch(drive_status & 0xF)
  69              	 .loc 1 22 0
  70 0004 4B4B     	 ldr r3,.L17
  71 0006 1B88     	 ldrh r3,[r3]
  72 0008 03F00F03 	 and r3,r3,#15
  73 000c 012B     	 cmp r3,#1
  74 000e 1BD0     	 beq .L3
  75 0010 022B     	 cmp r3,#2
  76 0012 30D0     	 beq .L4
  77 0014 002B     	 cmp r3,#0
  78 0016 00D0     	 beq .L5
  23:../state_machine.c **** 	{
  24:../state_machine.c **** 	case (STATE_0_DRIVE_DISABLED):
  25:../state_machine.c **** 		//Transition 0->1
  26:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_0_DRIVE_DISABLED) && (DRIVE_COMMAND_STATE_MSK == STATE_
  27:../state_machine.c **** 			{
  28:../state_machine.c **** 				drive_on();
  29:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
  30:../state_machine.c **** 				drive_command_old = drive_command;
  31:../state_machine.c **** 			}
  32:../state_machine.c **** 			break;
  33:../state_machine.c **** 	case (STATE_1_DRIVE_ON):
  34:../state_machine.c **** 		//Transition 1->2
  35:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_1_DRIVE_ON) && (DRIVE_COMMAND_STATE_MSK == STATE_2_OPER
  36:../state_machine.c **** 			{
  37:../state_machine.c **** 				operation_enabled();
  38:../state_machine.c **** 				drive_status = STATE_2_OPERATION_ENABLED;
  39:../state_machine.c **** 				drive_command_old = drive_command;
  40:../state_machine.c **** 			}
  41:../state_machine.c **** 			break;
  42:../state_machine.c **** 	case (STATE_2_OPERATION_ENABLED):
  43:../state_machine.c **** 	{
  44:../state_machine.c **** 		//Transition 2->1
  45:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_2_OPERATION_ENABLED) && (DRIVE_COMMAND_STATE_MSK == STA
  46:../state_machine.c **** 			{
  47:../state_machine.c **** 				drive_on();
  48:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
  49:../state_machine.c **** 				drive_command_old = drive_command;
  50:../state_machine.c **** 			}
  51:../state_machine.c **** 		//Transition 2->0
  52:../state_machine.c **** 		if ((DRIVE_COMMAND_OLD_STATE_MSK == STATE_2_OPERATION_ENABLED) && (DRIVE_COMMAND_STATE_MSK == STA
  53:../state_machine.c **** 			{
  54:../state_machine.c **** 				drive_disabled();
  55:../state_machine.c **** 				drive_status = STATE_0_DRIVE_DISABLED;
  56:../state_machine.c **** 				drive_command_old = drive_command;
  57:../state_machine.c **** 			}
  58:../state_machine.c **** 		//Check for update
  59:../state_machine.c **** 		if(!(DRIVE_COMMAND_UPDATE_OLD_MSK & UPDATE_MSK) && (DRIVE_COMMAND_UPDATE_MSK & UPDATE_MSK))
  60:../state_machine.c **** 		{
  61:../state_machine.c **** 			if(DRIVE_COMMAND_REF_MSK & REF_POS_MSK)
  62:../state_machine.c **** 			{
  63:../state_machine.c **** 				//POS REF
  64:../state_machine.c **** 				ref_type_select = REF_POS;
  65:../state_machine.c **** 			}
  66:../state_machine.c **** 			else if(DRIVE_COMMAND_REF_MSK & REF_SPD_MSK)
  67:../state_machine.c **** 			{
  68:../state_machine.c **** 				//SPD REF
  69:../state_machine.c **** 				ref_type_select = REF_SPD;
  70:../state_machine.c **** 			}
  71:../state_machine.c **** 			else if(DRIVE_COMMAND_REF_MSK & REF_I_MSK)
  72:../state_machine.c **** 			{
  73:../state_machine.c **** 				//I REFF
  74:../state_machine.c **** 				ref_type_select = REF_I;
  75:../state_machine.c **** 				if(DRIVE_COMMAND_TEST_MSK & TUNE_TEST)
  76:../state_machine.c **** 				{
  77:../state_machine.c **** 					//theta_fast = 0; 		SET THETA TO 0 
  78:../state_machine.c **** 					//disable theta computation
  79:../state_machine.c **** 				}
  80:../state_machine.c **** 			}
  81:../state_machine.c **** 			else
  82:../state_machine.c **** 			{
  83:../state_machine.c **** 				//U REF
  84:../state_machine.c **** 				ref_type_select = REF_U;
  85:../state_machine.c **** 			}
  86:../state_machine.c **** 			drive_command_old = drive_command;
  87:../state_machine.c **** 		}
  88:../state_machine.c **** 	}
  89:../state_machine.c **** 			break;
  90:../state_machine.c **** 	default:
  91:../state_machine.c **** 		break;
  79              	 .loc 1 91 0
  80 0018 8AE0     	 b .L1
  81              	.L5:
  26:../state_machine.c **** 			{
  82              	 .loc 1 26 0
  83 001a 474B     	 ldr r3,.L17+4
  84 001c 1B88     	 ldrh r3,[r3]
  85 001e 03F00F03 	 and r3,r3,#15
  86 0022 002B     	 cmp r3,#0
  87 0024 0FD1     	 bne .L6
  26:../state_machine.c **** 			{
  88              	 .loc 1 26 0 is_stmt 0 discriminator 1
  89 0026 454B     	 ldr r3,.L17+8
  90 0028 1B88     	 ldrh r3,[r3]
  91 002a 03F00F03 	 and r3,r3,#15
  92 002e 012B     	 cmp r3,#1
  93 0030 09D1     	 bne .L6
  28:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
  94              	 .loc 1 28 0 is_stmt 1
  95 0032 FFF7FEFF 	 bl drive_on
  29:../state_machine.c **** 				drive_command_old = drive_command;
  96              	 .loc 1 29 0
  97 0036 3F4B     	 ldr r3,.L17
  98 0038 0122     	 movs r2,#1
  99 003a 1A80     	 strh r2,[r3]
  30:../state_machine.c **** 			}
 100              	 .loc 1 30 0
 101 003c 3F4B     	 ldr r3,.L17+8
 102 003e 1A88     	 ldrh r2,[r3]
 103 0040 3D4B     	 ldr r3,.L17+4
 104 0042 1A80     	 strh r2,[r3]
  32:../state_machine.c **** 	case (STATE_1_DRIVE_ON):
 105              	 .loc 1 32 0
 106 0044 74E0     	 b .L1
 107              	.L6:
 108 0046 73E0     	 b .L1
 109              	.L3:
  35:../state_machine.c **** 			{
 110              	 .loc 1 35 0
 111 0048 3B4B     	 ldr r3,.L17+4
 112 004a 1B88     	 ldrh r3,[r3]
 113 004c 03F00F03 	 and r3,r3,#15
 114 0050 012B     	 cmp r3,#1
 115 0052 0FD1     	 bne .L8
  35:../state_machine.c **** 			{
 116              	 .loc 1 35 0 is_stmt 0 discriminator 1
 117 0054 394B     	 ldr r3,.L17+8
 118 0056 1B88     	 ldrh r3,[r3]
 119 0058 03F00F03 	 and r3,r3,#15
 120 005c 022B     	 cmp r3,#2
 121 005e 09D1     	 bne .L8
  37:../state_machine.c **** 				drive_status = STATE_2_OPERATION_ENABLED;
 122              	 .loc 1 37 0 is_stmt 1
 123 0060 FFF7FEFF 	 bl operation_enabled
  38:../state_machine.c **** 				drive_command_old = drive_command;
 124              	 .loc 1 38 0
 125 0064 334B     	 ldr r3,.L17
 126 0066 0222     	 movs r2,#2
 127 0068 1A80     	 strh r2,[r3]
  39:../state_machine.c **** 			}
 128              	 .loc 1 39 0
 129 006a 344B     	 ldr r3,.L17+8
 130 006c 1A88     	 ldrh r2,[r3]
 131 006e 324B     	 ldr r3,.L17+4
 132 0070 1A80     	 strh r2,[r3]
  41:../state_machine.c **** 	case (STATE_2_OPERATION_ENABLED):
 133              	 .loc 1 41 0
 134 0072 5DE0     	 b .L1
 135              	.L8:
 136 0074 5CE0     	 b .L1
 137              	.L4:
  45:../state_machine.c **** 			{
 138              	 .loc 1 45 0
 139 0076 304B     	 ldr r3,.L17+4
 140 0078 1B88     	 ldrh r3,[r3]
 141 007a 03F00F03 	 and r3,r3,#15
 142 007e 022B     	 cmp r3,#2
 143 0080 0ED1     	 bne .L9
  45:../state_machine.c **** 			{
 144              	 .loc 1 45 0 is_stmt 0 discriminator 1
 145 0082 2E4B     	 ldr r3,.L17+8
 146 0084 1B88     	 ldrh r3,[r3]
 147 0086 03F00F03 	 and r3,r3,#15
 148 008a 012B     	 cmp r3,#1
 149 008c 08D1     	 bne .L9
  47:../state_machine.c **** 				drive_status = STATE_1_DRIVE_ON;
 150              	 .loc 1 47 0 is_stmt 1
 151 008e FFF7FEFF 	 bl drive_on
  48:../state_machine.c **** 				drive_command_old = drive_command;
 152              	 .loc 1 48 0
 153 0092 284B     	 ldr r3,.L17
 154 0094 0122     	 movs r2,#1
 155 0096 1A80     	 strh r2,[r3]
  49:../state_machine.c **** 			}
 156              	 .loc 1 49 0
 157 0098 284B     	 ldr r3,.L17+8
 158 009a 1A88     	 ldrh r2,[r3]
 159 009c 264B     	 ldr r3,.L17+4
 160 009e 1A80     	 strh r2,[r3]
 161              	.L9:
  52:../state_machine.c **** 			{
 162              	 .loc 1 52 0
 163 00a0 254B     	 ldr r3,.L17+4
 164 00a2 1B88     	 ldrh r3,[r3]
 165 00a4 03F00F03 	 and r3,r3,#15
 166 00a8 022B     	 cmp r3,#2
 167 00aa 0ED1     	 bne .L10
  52:../state_machine.c **** 			{
 168              	 .loc 1 52 0 is_stmt 0 discriminator 1
 169 00ac 234B     	 ldr r3,.L17+8
 170 00ae 1B88     	 ldrh r3,[r3]
 171 00b0 03F00F03 	 and r3,r3,#15
 172 00b4 002B     	 cmp r3,#0
 173 00b6 08D1     	 bne .L10
  54:../state_machine.c **** 				drive_status = STATE_0_DRIVE_DISABLED;
 174              	 .loc 1 54 0 is_stmt 1
 175 00b8 FFF7FEFF 	 bl drive_disabled
  55:../state_machine.c **** 				drive_command_old = drive_command;
 176              	 .loc 1 55 0
 177 00bc 1D4B     	 ldr r3,.L17
 178 00be 0022     	 movs r2,#0
 179 00c0 1A80     	 strh r2,[r3]
  56:../state_machine.c **** 			}
 180              	 .loc 1 56 0
 181 00c2 1E4B     	 ldr r3,.L17+8
 182 00c4 1A88     	 ldrh r2,[r3]
 183 00c6 1C4B     	 ldr r3,.L17+4
 184 00c8 1A80     	 strh r2,[r3]
 185              	.L10:
  59:../state_machine.c **** 		{
 186              	 .loc 1 59 0
 187 00ca 1B4B     	 ldr r3,.L17+4
 188 00cc 1B88     	 ldrh r3,[r3]
 189 00ce 03F01003 	 and r3,r3,#16
 190 00d2 002B     	 cmp r3,#0
 191 00d4 2BD1     	 bne .L11
  59:../state_machine.c **** 		{
 192              	 .loc 1 59 0 is_stmt 0 discriminator 1
 193 00d6 194B     	 ldr r3,.L17+8
 194 00d8 1B88     	 ldrh r3,[r3]
 195 00da 03F01003 	 and r3,r3,#16
 196 00de 002B     	 cmp r3,#0
 197 00e0 25D0     	 beq .L11
  61:../state_machine.c **** 			{
 198              	 .loc 1 61 0 is_stmt 1
 199 00e2 164B     	 ldr r3,.L17+8
 200 00e4 1B88     	 ldrh r3,[r3]
 201 00e6 03F48073 	 and r3,r3,#256
 202 00ea 002B     	 cmp r3,#0
 203 00ec 03D0     	 beq .L12
  64:../state_machine.c **** 			}
 204              	 .loc 1 64 0
 205 00ee 144B     	 ldr r3,.L17+12
 206 00f0 0022     	 movs r2,#0
 207 00f2 1A70     	 strb r2,[r3]
 208 00f4 16E0     	 b .L13
 209              	.L12:
  66:../state_machine.c **** 			{
 210              	 .loc 1 66 0
 211 00f6 114B     	 ldr r3,.L17+8
 212 00f8 1B88     	 ldrh r3,[r3]
 213 00fa 03F40073 	 and r3,r3,#512
 214 00fe 002B     	 cmp r3,#0
 215 0100 03D0     	 beq .L14
  69:../state_machine.c **** 			}
 216              	 .loc 1 69 0
 217 0102 0F4B     	 ldr r3,.L17+12
 218 0104 0122     	 movs r2,#1
 219 0106 1A70     	 strb r2,[r3]
 220 0108 0CE0     	 b .L13
 221              	.L14:
  71:../state_machine.c **** 			{
 222              	 .loc 1 71 0
 223 010a 0C4B     	 ldr r3,.L17+8
 224 010c 1B88     	 ldrh r3,[r3]
 225 010e 03F48063 	 and r3,r3,#1024
 226 0112 002B     	 cmp r3,#0
 227 0114 03D0     	 beq .L15
  74:../state_machine.c **** 				if(DRIVE_COMMAND_TEST_MSK & TUNE_TEST)
 228              	 .loc 1 74 0
 229 0116 0A4B     	 ldr r3,.L17+12
 230 0118 0222     	 movs r2,#2
 231 011a 1A70     	 strb r2,[r3]
 232 011c 02E0     	 b .L13
 233              	.L15:
  84:../state_machine.c **** 			}
 234              	 .loc 1 84 0
 235 011e 084B     	 ldr r3,.L17+12
 236 0120 0322     	 movs r2,#3
 237 0122 1A70     	 strb r2,[r3]
 238              	.L13:
  86:../state_machine.c **** 		}
 239              	 .loc 1 86 0
 240 0124 054B     	 ldr r3,.L17+8
 241 0126 1A88     	 ldrh r2,[r3]
 242 0128 034B     	 ldr r3,.L17+4
 243 012a 1A80     	 strh r2,[r3]
  89:../state_machine.c **** 	default:
 244              	 .loc 1 89 0
 245 012c FFE7     	 b .L16
 246              	.L11:
 247              	.L16:
 248 012e 00BF     	 nop
 249              	.L1:
  92:../state_machine.c **** 	}
  93:../state_machine.c **** }
 250              	 .loc 1 93 0
 251 0130 80BD     	 pop {r7,pc}
 252              	.L18:
 253 0132 00BF     	 .align 2
 254              	.L17:
 255 0134 00000000 	 .word drive_status
 256 0138 00000000 	 .word drive_command_old
 257 013c 00000000 	 .word drive_command
 258 0140 00000000 	 .word ref_type_select
 259              	 .cfi_endproc
 260              	.LFE196:
 262              	 .section .text.drive_disabled,"ax",%progbits
 263              	 .align 2
 264              	 .global drive_disabled
 265              	 .thumb
 266              	 .thumb_func
 268              	drive_disabled:
 269              	.LFB197:
  94:../state_machine.c **** 
  95:../state_machine.c **** void drive_disabled (void)
  96:../state_machine.c **** {
 270              	 .loc 1 96 0
 271              	 .cfi_startproc
 272              	 
 273              	 
 274 0000 80B5     	 push {r7,lr}
 275              	.LCFI2:
 276              	 .cfi_def_cfa_offset 8
 277              	 .cfi_offset 7,-8
 278              	 .cfi_offset 14,-4
 279 0002 00AF     	 add r7,sp,#0
 280              	.LCFI3:
 281              	 .cfi_def_cfa_register 7
  97:../state_machine.c **** 	motion_off();
 282              	 .loc 1 97 0
 283 0004 FFF7FEFF 	 bl motion_off
  98:../state_machine.c **** 	loop_control = LOOP_CONTROL_OFF;	//control_loop_off
 284              	 .loc 1 98 0
 285 0008 034B     	 ldr r3,.L20
 286 000a 0022     	 movs r2,#0
 287 000c 1A70     	 strb r2,[r3]
  99:../state_machine.c **** 	ref_gen_status = STATUS_0_DISABLED;
 288              	 .loc 1 99 0
 289 000e 034B     	 ldr r3,.L20+4
 290 0010 0022     	 movs r2,#0
 291 0012 1A70     	 strb r2,[r3]
 100:../state_machine.c **** }
 292              	 .loc 1 100 0
 293 0014 80BD     	 pop {r7,pc}
 294              	.L21:
 295 0016 00BF     	 .align 2
 296              	.L20:
 297 0018 00000000 	 .word loop_control
 298 001c 00000000 	 .word ref_gen_status
 299              	 .cfi_endproc
 300              	.LFE197:
 302              	 .section .text.drive_on,"ax",%progbits
 303              	 .align 2
 304              	 .global drive_on
 305              	 .thumb
 306              	 .thumb_func
 308              	drive_on:
 309              	.LFB198:
 101:../state_machine.c **** 
 102:../state_machine.c **** void drive_on (void)
 103:../state_machine.c **** {
 310              	 .loc 1 103 0
 311              	 .cfi_startproc
 312              	 
 313              	 
 314 0000 80B5     	 push {r7,lr}
 315              	.LCFI4:
 316              	 .cfi_def_cfa_offset 8
 317              	 .cfi_offset 7,-8
 318              	 .cfi_offset 14,-4
 319 0002 00AF     	 add r7,sp,#0
 320              	.LCFI5:
 321              	 .cfi_def_cfa_register 7
 104:../state_machine.c **** 	motion_off();
 322              	 .loc 1 104 0
 323 0004 FFF7FEFF 	 bl motion_off
 105:../state_machine.c **** 	current_offset();
 324              	 .loc 1 105 0
 325 0008 FFF7FEFF 	 bl current_offset
 106:../state_machine.c **** 	init_position();
 326              	 .loc 1 106 0
 327 000c FFF7FEFF 	 bl init_position
 107:../state_machine.c **** 	pwm_update(0, 0, 0);				//pwm_on_50%
 328              	 .loc 1 107 0
 329 0010 0020     	 movs r0,#0
 330 0012 0021     	 movs r1,#0
 331 0014 0022     	 movs r2,#0
 332 0016 FFF7FEFF 	 bl pwm_update
 108:../state_machine.c **** 	loop_control = LOOP_CONTROL_OFF;	//control_loop_off
 333              	 .loc 1 108 0
 334 001a 034B     	 ldr r3,.L23
 335 001c 0022     	 movs r2,#0
 336 001e 1A70     	 strb r2,[r3]
 109:../state_machine.c **** 	ref_gen_status = STATUS_0_DISABLED;
 337              	 .loc 1 109 0
 338 0020 024B     	 ldr r3,.L23+4
 339 0022 0022     	 movs r2,#0
 340 0024 1A70     	 strb r2,[r3]
 110:../state_machine.c **** }
 341              	 .loc 1 110 0
 342 0026 80BD     	 pop {r7,pc}
 343              	.L24:
 344              	 .align 2
 345              	.L23:
 346 0028 00000000 	 .word loop_control
 347 002c 00000000 	 .word ref_gen_status
 348              	 .cfi_endproc
 349              	.LFE198:
 351              	 .section .text.operation_enabled,"ax",%progbits
 352              	 .align 2
 353              	 .global operation_enabled
 354              	 .thumb
 355              	 .thumb_func
 357              	operation_enabled:
 358              	.LFB199:
 111:../state_machine.c **** 
 112:../state_machine.c **** void operation_enabled (void)
 113:../state_machine.c **** {
 359              	 .loc 1 113 0
 360              	 .cfi_startproc
 361              	 
 362              	 
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI6:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI7:
 370              	 .cfi_def_cfa_register 7
 114:../state_machine.c **** 	loop_control = LOOP_CONTROL_ON;		//control_loop_on
 371              	 .loc 1 114 0
 372 0004 034B     	 ldr r3,.L26
 373 0006 0122     	 movs r2,#1
 374 0008 1A70     	 strb r2,[r3]
 115:../state_machine.c **** 	motion_on();
 375              	 .loc 1 115 0
 376 000a FFF7FEFF 	 bl motion_on
 116:../state_machine.c **** 	reference_generator_compute();		//TESTING
 377              	 .loc 1 116 0
 378 000e FFF7FEFF 	 bl reference_generator_compute
 117:../state_machine.c **** }
 379              	 .loc 1 117 0
 380 0012 80BD     	 pop {r7,pc}
 381              	.L27:
 382              	 .align 2
 383              	.L26:
 384 0014 00000000 	 .word loop_control
 385              	 .cfi_endproc
 386              	.LFE199:
 388              	 .text
 389              	.Letext0:
 390              	 .file 2 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 391              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 392              	 .file 4 "../reference_generator.h"
 393              	 .file 5 "C:/CODE/Licenta/Libraries/CMSIS/Include/core_cm4.h"
 394              	 .file 6 "../main.h"
 395              	 .file 7 "../transform.h"
DEFINED SYMBOLS
                            *ABS*:00000000 state_machine.c
                            *COM*:00000004 CCU8_CC8_CR1_CR1_Value
                            *COM*:00000004 theta_fast
    {standard input}:26     .bss.drive_status:00000000 drive_status
    {standard input}:23     .bss.drive_status:00000000 $d
    {standard input}:33     .bss.drive_command:00000000 drive_command
    {standard input}:30     .bss.drive_command:00000000 $d
    {standard input}:40     .bss.drive_command_old:00000000 drive_command_old
    {standard input}:37     .bss.drive_command_old:00000000 $d
    {standard input}:46     .bss.loop_control:00000000 loop_control
    {standard input}:47     .bss.loop_control:00000000 $d
    {standard input}:49     .text.state_machine:00000000 $t
    {standard input}:54     .text.state_machine:00000000 state_machine
    {standard input}:308    .text.drive_on:00000000 drive_on
    {standard input}:357    .text.operation_enabled:00000000 operation_enabled
    {standard input}:268    .text.drive_disabled:00000000 drive_disabled
    {standard input}:255    .text.state_machine:00000134 $d
    {standard input}:263    .text.drive_disabled:00000000 $t
    {standard input}:297    .text.drive_disabled:00000018 $d
    {standard input}:303    .text.drive_on:00000000 $t
    {standard input}:346    .text.drive_on:00000028 $d
    {standard input}:352    .text.operation_enabled:00000000 $t
    {standard input}:384    .text.operation_enabled:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ref_type_select
motion_off
ref_gen_status
current_offset
init_position
pwm_update
motion_on
reference_generator_compute
